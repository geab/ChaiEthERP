USE [LIMSLite]
GO
/****** Object:  StoredProcedure [dbo].[CovidGetAllListforDetail]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[CovidGetAllListforDetail]
	@SpecimenId nvarchar(500)=''
	
AS
SELECT     dbo.CovPatients.Fullname, dbo.CovPatients.Sex, dbo.CovPatients.EPIIDCOCMR, dbo.CovPatients.Age, 
					  dbo.Province.ProvinceName,dbo.SpecimenType.SpecimenName,dbo.CovSpecimens.SampleCollectedDate,
                      dbo.CovSpecimens.SampleDropOffDate, dbo.CovRequestForms.Startdateofsigns, dbo.CovSpecimens.RecievedDate , CovSpecimens.SampleQuality, 
					  dbo.CovSpecimenResults.FinalReportDate,dbo.CovSpecimenResults.FinalReportResult,LabInstrument.LabInstrumentname,
					  dbo.CovSpecimenResults.LabInstrumentId , (select LabManagerSign from Laboratory) as logo

                      
                      
FROM         dbo.CovSpecimens LEFT OUTER JOIN
                      dbo.CovRequestForms ON dbo.CovRequestForms.Id = dbo.CovSpecimens.Id LEFT OUTER JOIN
                      dbo.CovPatients ON dbo.CovRequestForms.CovPatient_Id = dbo.CovPatients.Id LEFT OUTER JOIN
                      dbo.Facility ON dbo.CovRequestForms.Facility_Id = dbo.Facility.Id LEFT OUTER JOIN
                      dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
                      dbo.SpecimenType ON dbo.SpecimenType.Id = dbo.CovSpecimens.SampleType LEFT OUTER JOIN
                      dbo.Province ON dbo.Province.Id = dbo.CovRequestForms.Region_Id LEFT OUTER JOIN
                      dbo.CovStatuses ON dbo.CovStatuses.Id = dbo.CovSpecimens.Id LEFT OUTER JOIN
                      dbo.CovSpecimenResults ON dbo.CovSpecimenResults.Id = dbo.CovSpecimens.Id LEFT OUTER JOIN
                      dbo.LabInstrument ON dbo.CovSpecimenResults.LabInstrumentId = dbo.LabInstrument.ID LEFT OUTER JOIN
                      dbo.AppUser AS SpecimenResultUpdatedBy ON dbo.CovSpecimenResults.UpdatedById = SpecimenResultUpdatedBy.UserId
                      Where  
                        --1 = Case when @SpecimenId = '' Then 1 When HCVSpecimen.Id in (@SpecimenId) --Then 1 END 
                        charindex(',' + CAST(dbo.CovSpecimens.Id as nvarchar(20)) + ',', @SpecimenId) > 0
                        order by dbo.CovSpecimens.SampleID asc                   
                        
--SELECT  AppUser.UserId AS UserId, AppUser.UserSign As UserSign From dbo.AppUser
GO
/****** Object:  StoredProcedure [dbo].[DispatchResult]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[DispatchResult]
@parameters varchar(max)
AS
declare @query varchar(max)
declare @param varchar(max)
set @param = @parameters
 set @query = ' SELECT (Patient.FirstName + '' '' + Patient.Surname) As PatientFullName, ' +
                '  Patient.DateOfBirth,   ' +
                '  Patient.Sex,   ' +
                ' (Patient.MorGFirstName  + '' '' +   Patient.MorGMiddlename   + '' '' +  Patient.MorGSurname) As MotherOrGurdianFullName,   ' +
                '  Facility.FacilityName,    ' +
                '  Facility.FacilityCode,  ' +
                '  Facility.SMSPhoneNumber,  ' +
                 ' Province.ProvinceName,  ' +
                 ' Province.ProvinceCode,  ' +
                 ' Facility.Email,   ' +
                 ' FacilityType.FacilityTypeName, ' +
                 ' Patient.PMTCTCode, ' +
                 ' RequestForm.BatchNumber,   ' +
                 ' RequestForm.ReasonTest,    ' +
                 ' RequestForm.PreviousLabNumber,  ' + 
                 ' RequestForm.NameOfNurseOrHEOCollectingDBS,  ' +   
                 ' RequestForm.MotherHIVStatus,    ' +
                 ' RequestForm.ModeOfDelivery,    ' +
                 ' RequestForm.MotherARVStatus,    ' +
                 ' RequestForm.IfARVStatusOnWeekStarted,  ' +  
                 ' RequestForm.MotherARVRegimen,    ' +
                 ' RequestForm.TimingIfMotherARVRegimenOther,    ' +
                 ' RequestForm.InfantARVStatus,    ' +
                 ' RequestForm.TimingIfInfantARVSatusOther,  ' +
                 ' RequestForm.ExclusiveBreastFeeding,   ' +
                 ' RequestForm.ExclusiveReplacementFeeding,   ' +
                 ' RequestForm.IfReplacementYesAgeAtWean,  ' +
                 ' RequestForm.MixedFeeding,    ' +
                 ' RequestForm.BreastFeedingUnknown,  ' +
                 ' RequestForm.AnyPriorHIVTestResult,  ' +
                 ' RequestForm.PriorHIVTestResult,   ' +
                 ' RequestForm.PriorTestType,   ' +
                 ' CASE WHEN CAST(Year(RequestForm.PriorHIVTestDate) AS nvarchar) =2000 THEN NULL ELSE RequestForm.PriorHIVTestDate END as PriorHIVTestDate,   ' +
                 ' RequestFormCreatedBy.DateCreated As RequestFormCreatedDate,   ' +
                 ' (RequestFormCreatedBy.FirstName   + '' '' +  RequestFormCreatedBy.LastName) As RequestFormCreatedBy,  ' +
                 '  FacilityDoctors.DoctorFullName, ' +
                 ' Specimen.LabNumber,    ' +
                 ' Specimen.RecievedDate, ' +
                 ' Specimen.SampleCollectedDate,    ' +
                 ' Specimen.SampleShipmentDate,    ' +
                 ' Specimen.RegistrationDate,    ' +
                 ' Specimen.DBSSpecimenQuality,   ' +
                 ' RejectedReason.Reason AS RejectedReason,   ' +
                 ' Specimen.Id AS SpecimenId,  ' +
                 '(CASE WHEN SpecimenResult.FinalReportResult = ''Positive'' and LabInstrument.LabInstrumentname =''Abbott Real Time PCR'' THEN ''Detected'' WHEN SpecimenResult.FinalReportResult = ''Negative'' and LabInstrument.LabInstrumentname =''Abbott Real Time PCR'' THEN ''Not Detected'' ELSE SpecimenResult.FinalReportResult END) As FinalReportResult , ' + 
                 ' SpecimenResult.FinalReportDate,  ' +
                 ' SpecimenResult.DateCreated AS DateCreatedSpecimenResult,  ' +
                 ' SpecimenResult.DateUpdated AS DateUpdatedSpecimenResult,  ' +
                 ' SpecimenResult.SecondDBSRequired ,  ' +
                 '  (SpecimenResultCreatedBy.FirstName   + '' '' +  SpecimenResultCreatedBy.LastName) AS SpecimenResultCreatedBy,   ' + 
                 '   (SpecimenResultUpdatedBy.FirstName  + '' '' + SpecimenResultUpdatedBy.LastName) AS ResultApprovedBy,    ' +
                 '  SpecimenResult.Id AS SpecimenResultId,   ' +
                 ' SpecimenResult.RepeatReasonSecondTest,  ' + 
                 ' SpecimenResult.RepeatSecondTest,   ' +
                 ' LabInstrument.LabInstrumentname, ' +
                 ' SpecimenResult.TestedBy As TestedBy ' +
             ' FROM Specimen left JOIN   ' +
                '    RequestForm ON RequestForm.Id = Specimen.RequestId left JOIN   ' +
                ' RequestRejectedReason ON RequestForm.Id = RequestRejectedReason.RequestId left JOIN ' +
                ' RejectedReason ON RequestRejectedReason.RejectedReasonId = RejectedReason.Id left JOIN ' +
                '   Patient ON RequestForm.PatientId = Patient.Id left JOIN   ' +
                '   Facility ON RequestForm.FacilityId = Facility.Id left JOIN   ' +
                '   FacilityDoctors ON RequestForm.ReferingDoctorId = FacilityDoctors.Id Left Join ' +
                '   FacilityType ON RequestForm.WardId = FacilityType.Id Left Join ' +
                '   AppUser As RequestFormCreatedBy ON RequestForm.CreatedBy = RequestFormCreatedBy.UserId left join   ' +
                '   Province ON Province.Id = RequestForm.ProvinceId left join   ' +
                '   Status ON Status.SpecimenId = Specimen.Id left join   ' +
                '   SpecimenResult ON SpecimenResult.SpecimenId = Specimen.Id left join  ' +
                '   LabInstrument ON SpecimenResult.LabInstrumentId = LabInstrument.Id left join  ' +
                '   AppUser As SpecimenResultCreatedBy ON SpecimenResult.CreatedById = SpecimenResultCreatedBy.UserId left join  ' +
                '   AppUser As SpecimenResultUpdatedBy ON SpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId   ' +
                ' where '
           EXECUTE(@query + @param)
GO
/****** Object:  StoredProcedure [dbo].[EIDGetAllListforDetail]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[EIDGetAllListforDetail]
	@SpecimenId nvarchar(500)=''
	
AS
 SELECT  (Patient.FirstName + ' ' + Patient.Surname) As Name,  Patient.PMTCTCode as PMTCT_Code, 
 (Patient.MorGFirstName + ' ' + Patient.MorGSurname) as Mother_Name, Specimen.LabNumber as Lab_Number,  Patient.DateOfBirth as Date_of_Birth,  
 Patient.Sex,  Patient.PatientCode ,Province.ProvinceName as State_Region, Facility.FacilityName as TownShip_Hospital,
 dbo.LLG.LLGName AS Township, FacilityType.FacilityTypeName as Facility_Type, RequestForm.ReasonTest as Reason_for_Test,  
 RequestForm.NameOfNurseOrHEOCollectingDBS as Name_of_Health_Staff,  RequestForm.MotherHIVStatus as Mother_HIV_Status,  
 RequestForm.ModeOfDelivery as Mode_of_Delivery,RequestForm.MotherARVRegimen as Mother_ARV_Regimen,  
 RequestForm.ProphlaticARV as Infant_ARV_Status,  RequestForm.CurrentFeedingmode as Current_Feeding_Mode,  
 RequestForm.DateEndofBreastfeed as Age_when_last_breastfed, SpecimenType.SpecimenName as Specimen_Type, 
 Status.Status as Status, Specimen.Id as SpecimenId,  Specimen.SampleCollectedDate as Sample_Collected_Date,  
 Specimen.SampleShipmentDate as Sample_Shipment_Date,  Specimen.RegistrationDate as Registration_Date,  
 Specimen.DBSSpecimenQuality as DBS_Specimen_Quality,  Specimen.RejectedReason as Rejected_Reason, 
 SpecimenResult.FirstTestDate, SpecimenResult.FirstTestResult, SpecimenResult.RepeatTest,SpecimenResult.TestedBy, 
 SpecimenResult.RepeatReason, SpecimenResult.SecondTestDate, SpecimenResult.SecondTestResult, 
 SpecimenResult.RepeatSecondTest, SpecimenResult.ThirdTestDate, SpecimenResult.ThirdTestResult, 
 SpecimenResult.RepeatReasonSecondTest, SpecimenResult.FirstTestAbsorbanceValue, SpecimenResult.SecondTestAbsorbanceValue, 
 SpecimenResult.ThirdTestAbsorbanceValue, SpecimenResult.FinalReportResult, SpecimenResult.SecondDBSRequired, 
 SpecimenResult.FinalReportDate, SpecimenResult.Comment, LabInstrument.LabInstrumentname, 
 (SpecimenResultUpdatedBy.FirstName  + ' ' + SpecimenResultUpdatedBy.LastName) AS Result_Approved_By ,
 SpecimenResult.UpdatedById AS UpdatedByIdSpecimenResult, (select LabManagerSign from Laboratory) as logo
 
FROM Specimen left JOIN RequestForm ON RequestForm.Id = Specimen.RequestId 
 left JOIN SpecimenType ON RequestForm.SpecimenType = SpecimenType.Id  
 left JOIN Patient ON RequestForm.PatientId = Patient.Id 
 left JOIN Facility ON RequestForm.FacilityId = Facility.Id 
 left JOIN FacilityType ON Facility.FacilityTypeId = FacilityType.Id 
 left JOIN  dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId
 left JOIN District ON RequestForm.DistrictId = District.Id 
 left JOIN AppUser ON Specimen.UserEnteringData = AppUser.UserId 
 left join Province ON Province.Id = RequestForm.ProvinceId 
 left join Status ON Status.SpecimenId = Specimen.Id 
 left join SpecimenResult ON SpecimenResult.SpecimenId = Specimen.Id 
 left join  LabInstrument ON SpecimenResult.LabInstrumentId = LabInstrument.Id 
 Left Join AppUser As SpecimenResultUpdatedBy ON SpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId 
 WHERE  
  charindex(',' + CAST(Specimen.Id as nvarchar(20)) + ',', @SpecimenId) > 0 order by dbo.Specimen.LabNumber asc
  
  SELECT  AppUser.UserId AS UserId, AppUser.UserSign As UserSign From dbo.AppUser --Where UserSign is not null
GO
/****** Object:  StoredProcedure [dbo].[EIDGetAllListforHistory]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[EIDGetAllListforHistory]	
	@SpecimenId nvarchar(500)=''
AS

DECLARE @LabID int;

--Get Lab ID
set @Labid = (SELECT [Id] FROM [LIMSLite].[dbo].[Laboratory]);

--Create @Specimen Temp table
     DECLARE  @Specimen  TABLE(  PMTCTCode nvarchar(100),
								 FirstName nvarchar(100),
                                 PatientCode nvarchar(50), 
                                 DateOfBirth nvarchar(100),                                 
                                 Sex nvarchar(10),
                                 SpecimenId int) 
                                 
 --Create @PatientHistory Temp table
     DECLARE  @PatientHistory  TABLE( 
                                 PatientCode nvarchar(50),
                                 LabNumber nvarchar(50) ,
                                 TestDate datetime,
                                 Result  nvarchar(50),
                                 Instrument nvarchar(50),
                                 Name nvarchar(100),
                                 DateOfBirth Datetime,
                                 Sex nvarchar(10)
                                 )  
                                 
    INSERT @Specimen (PMTCTCode,FirstName,PatientCode,DateOfBirth,Sex,SpecimenId)                             
    SELECT  dbo.Patient.PMTCTCode, dbo.Patient.FirstName,dbo.Patient.PatientCode,dbo.Patient.DateOfBirth,dbo.Patient.Sex,Specimen.Id AS SpecimenId 
    FROM Specimen left JOIN RequestForm ON RequestForm.Id = Specimen.RequestId 
	left JOIN SpecimenType ON RequestForm.SpecimenType = SpecimenType.Id 	 
	left JOIN Patient ON RequestForm.PatientId = Patient.Id 
	left join Status ON Status.SpecimenId = Specimen.Id 
	left join SpecimenResult ON SpecimenResult.SpecimenId = Specimen.Id 
	left join  LabInstrument ON SpecimenResult.LabInstrumentId = LabInstrument.Id 
    Where charindex(',' + CAST(Specimen.Id as nvarchar(20)) + ',', @SpecimenId) > 0
                        
DECLARE @MyCursor CURSOR;
DECLARE	@FirstName nvarchar(100) = '';
DECLARE	@DateOfBirth Datetime;
DECLARE	@Sex nvarchar(10)='';
BEGIN
    SET @MyCursor = CURSOR FOR
    select FirstName,DateOfBirth,Sex from @Specimen     

    OPEN @MyCursor 
    FETCH NEXT FROM @MyCursor 
    INTO @FirstName,@DateOfBirth,@Sex

    WHILE @@FETCH_STATUS = 0
    BEGIN    
        INSERT @PatientHistory (PatientCode,LabNumber,TestDate,Result,Instrument,Name,DateOfBirth,Sex)
        SELECT Patient.PatientCode as PatientCode, Specimen.LabNumber as LabNumber ,SpecimenResult.FinalReportDate as TestDate, SpecimenResult.FinalReportResult as Result,LabInstrument.LabInstrumentname as Instrument
         ,@FirstName as Name ,@DateOfBirth As DateOfBirth ,  @Sex As Sex   FROM dbo.RequestForm LEFT OUTER JOIN 
                          dbo.Patient on dbo.Patient.Id = dbo.RequestForm.PatientId Inner Join
                          dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId Inner  JOIN 
                          dbo.SpecimenResult ON dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId Inner  JOIN
                          Status ON dbo.Specimen.Id = dbo.Status.SpecimenId left join
                      LabInstrument on dbo.LabInstrument.Id = dbo.SpecimenResult.LabInstrumentId    
                      Where             
						1 = Case when @FirstName = '' Then 1 When Patient.FirstName  = @FirstName Then 1 END and 
					    1 = Case when @DateOfBirth = '' Then 1 When Patient.DateOfBirth  = @DateOfBirth  Then 1 END and
						1 = Case when @Sex = '' Then 1 When Patient.Sex  = @Sex Then 1 END   
      
      FETCH NEXT FROM @MyCursor 
      INTO @FirstName,@DateOfBirth,@Sex
    END; 

    CLOSE @MyCursor ;
    DEALLOCATE @MyCursor;
END;
     select * from @PatientHistory group by PatientCode,LabNumber,Result,TestDate,Instrument,Name,DateOfBirth,Sex;
GO
/****** Object:  StoredProcedure [dbo].[EIDLabTestedSummary]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[EIDLabTestedSummary]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' 
AS
		SELECT  Distinct COUNT(Distinct dbo.RequestForm.PatientId) as No_Patient, 
		COUNT(dbo.RequestForm.Id) AS 'No_Sample_Recieved', 
		COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Rejected' THEN 1 END) AS 'No_Rejected_Sample',
		COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' and  Status.Status != 'RecivedFromFacility' THEN 1 END ) As 'No_of_Sample_Tested',
        --COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' THEN 1 END ) As 'No_of_Sample_Tested',
        COUNT(dbo.RequestForm.Id) - ( COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' and  Status.Status != 'RecivedFromFacility' THEN 1 END )+ COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Rejected' THEN 1 END)) As 'No_of_Sample_Not_Tested',
        --COUNT(CASE WHEN Status.Status = 'RecivedFromFacility' THEN 1 END ) As 'No_of_Sample_Not_Tested',
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' THEN 1 END)+
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Detected' THEN 1 END) AS 'No_Positive',
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Negative' THEN 1 END) + 
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Not Detected'THEN 1 END) AS 'No_Negative',
        nullif(COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' or  SpecimenResult.FinalReportResult = 'Detected' THEN 1 END) * 100,0) / COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' THEN 1 END ) AS 'Proportion_of_Positive_Infants',
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Indeterminate' THEN 1 END) AS 'No_Indeterminate',
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Invalid/Error' THEN 1 END) 
        +  COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Unknown' THEN 1 END)   AS 'Invalid_Error' ,
        nullif(COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' 
        or  SpecimenResult.FinalReportResult = 'Detected' THEN 1 END) * 100,0) / COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' THEN 1 END ) AS 'Positivity_Rate',
        Province.ProvinceName as ProvinceName,Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
        FROM dbo.RequestForm LEFT OUTER JOIN 
        dbo.RequestRejectedReason ON dbo.RequestForm.Id = dbo.RequestRejectedReason.RequestId LEFT OUTER JOIN 
		dbo.Province ON dbo.RequestForm.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
        dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT OUTER JOIN 
        dbo.SpecimenResult ON dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId LEFT OUTER JOIN 
        Status ON dbo.Specimen.Id = dbo.Status.SpecimenId LEFT OUTER JOIN 
        dbo.Facility ON dbo.Facility.Id = dbo.RequestForm.FacilityId Where    
        
        1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.SpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END
		and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
		and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
        and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
        Group by Province.ProvinceName,Facility.FacilityName
GO
/****** Object:  StoredProcedure [dbo].[EIDPatientHistory]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[EIDPatientHistory]
	@PMTCTCode nvarchar(100) = '',
	@FirstName nvarchar(100) = '',
	@PatientCode nvarchar(100) = '',
	@DateOfBirth nvarchar(100) = '',
	@Sex nvarchar(10)=''
AS
declare @query varchar(max)
 set @query = '';
SELECT Patient.PatientCode as PatientCode, Specimen.LabNumber as LabNumber , SpecimenResult.FinalReportDate as TestDate, SpecimenResult.FinalReportResult as Result,LabInstrument.LabInstrumentname as Instrument
                          FROM dbo.RequestForm LEFT OUTER JOIN 
                          dbo.Patient on dbo.Patient.Id = dbo.RequestForm.PatientId Inner Join
                          dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId Inner  JOIN 
                          dbo.SpecimenResult ON dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId Inner  JOIN
                          Status ON dbo.Specimen.Id = dbo.Status.SpecimenId left join
                      LabInstrument on dbo.LabInstrument.Id = dbo.SpecimenResult.LabInstrumentId    
                      Where    --Patient.PatientCode = @PatientCode 
    1 = Case when @PMTCTCode = '' Then 1 When Patient.PMTCTCode  = @PMTCTCode Then 1 END and        
    1 = Case when @FirstName = '' Then 1 When Patient.FirstName  = @FirstName Then 1 END and 
    1 = Case when @PatientCode = '' Then 1 When Patient.PatientCode  = @PatientCode Then 1 END and
    1 = Case when @DateOfBirth = '' Then 1 When Patient.DateOfBirth  = @DateOfBirth Then 1 END and
    1 = Case when @Sex = '' Then 1 When Patient.Sex  = @Sex Then 1 END 
--Union all

--Select EIDLegacy.PatientCode as PatientCode , EIDLegacy.LabNumber as LabNumber, EIDLegacy.TestDate as TestDate, EIDLegacy.Result as Result,EIDLegacy.InstrumentUsed as Instrument

--From  EIDLegacy

--Where EIDLegacy.PatientCode = @PatientCode
GO
/****** Object:  StoredProcedure [dbo].[GetINWeeks]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetINWeeks]
	
AS
              SELECT   COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' THEN 1 END) as 'NOPositive',COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Negative' THEN 1 END) as 'NONegative','6Wks'
FROM                   dbo.RequestForm LEFT JOIN
                       dbo.Province ON dbo.RequestForm.Id = dbo.Province.Id LEFT JOIN
                       dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT JOIN 
                       dbo.SpecimenResult ON   dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId
                       WHERE dbo.RequestForm.ageinweeks Between 1 and 6
                       union all
                       
                        SELECT   COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' THEN 1 END) as 'NOPositive',COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Negative' THEN 1 END) as 'NONegative','7Wks-3M'
FROM                   dbo.RequestForm LEFT JOIN
                       dbo.Province ON dbo.RequestForm.Id = dbo.Province.Id LEFT JOIN
                       dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT JOIN 
                       dbo.SpecimenResult ON   dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId
                       WHERE dbo.RequestForm.ageinweeks Between 7 and 13
                       UNION all
                       SELECT   COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' THEN 1 END) as 'NOPositive',COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Negative' THEN 1 END) as 'NONegative','3M-9M'
FROM                   dbo.RequestForm LEFT JOIN
                       dbo.Province ON dbo.RequestForm.Id = dbo.Province.Id LEFT JOIN
                       dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT JOIN 
                       dbo.SpecimenResult ON   dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId
                       WHERE dbo.RequestForm.ageinweeks Between 13 and 39
                        UNION all
                       SELECT   COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' THEN 1 END) as 'NOPositive',COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Negative' THEN 1 END) as 'NONegative','9M-18M'
FROM                   dbo.RequestForm LEFT JOIN
                       dbo.Province ON dbo.RequestForm.Id = dbo.Province.Id LEFT JOIN
                       dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT JOIN 
                       dbo.SpecimenResult ON   dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId
                       WHERE dbo.RequestForm.ageinweeks Between 39 and 78
                        UNION all
                       SELECT   COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' THEN 1 END) as 'NOPositive',COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Negative' THEN 1 END) as 'NONegative','Above 18'
FROM                   dbo.RequestForm LEFT JOIN
                       dbo.Province ON dbo.RequestForm.Id = dbo.Province.Id LEFT JOIN
                       dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT JOIN 
                       dbo.SpecimenResult ON   dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId
                       WHERE dbo.RequestForm.ageinweeks > 78
                       UNION all
                       SELECT   COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' THEN 1 END) as 'NOPositive',COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Negative' THEN 1 END) as 'NONegative','No Data'
FROM                   dbo.RequestForm LEFT JOIN
                       dbo.Province ON dbo.RequestForm.Id = dbo.Province.Id LEFT JOIN
                       dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT JOIN 
                       dbo.SpecimenResult ON   dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId
                       WHERE dbo.RequestForm.ageinweeks = NULL
GO
/****** Object:  StoredProcedure [dbo].[GetPostiveresult]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[GetPostiveresult]
	
AS
                     
                     SELECT Sum(Case When SpecimenResult.ThirdTestResult != '' Then  1 Else 0 End + 
                      Case When SpecimenResult.SecondTestResult != '' Then 1 Else 0 End + 
                       Case When SpecimenResult.FirstTestResult != '' Then 1 Else 0 End)
                      
                     
       FROM dbo.RequestForm LEFT JOIN 
                        dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT JOIN 
                        dbo.SpecimenResult ON   dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId
GO
/****** Object:  StoredProcedure [dbo].[HCVGetAllListforDetail]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[HCVGetAllListforDetail]
	@SpecimenId nvarchar(500)=''
	
AS
SELECT     dbo.HCVPatient.Fullname, dbo.HCVPatient.Sex, dbo.HCVPatient.PatientCode, dbo.HCVPatient.ARTNumber, 
					  dbo.Province.ProvinceName,dbo.Facility.Id As FacilityId, dbo.Facility.FacilityName, 
                      dbo.Facility.HCVSMSNumber, dbo.Facility.HCVEmail, dbo.FacilityType.FacilityTypeName, dbo.LLG.LLGName AS Township, dbo.HCVRequestForm.Age,dbo.HCVRequestForm.Age_Month, dbo.HCVTestReason.Reasonfortest, 
                      dbo.SpecimenType.SpecimenName, dbo.HCVRequestForm.RegistrationNo, dbo.HCVRequestForm.BatchNumber, dbo.HCVRequestForm.ReasonTest, 
                      dbo.HCVRequestForm.SpecimenType, dbo.HCVRequestForm.Adherence,                      
                      dbo.HCVRequestForm.NameOfNurseOrHEOCollectingDBS, dbo.HCVSpecimen.LabNumber, dbo.HCVSpecimen.specimencollectionTime, dbo.HCVSpecimen.SampleCollectedDate, 
                      dbo.HCVSpecimen.SampleShipmentDate, dbo.HCVSpecimen.RegistrationDate, dbo.AppUser.FirstName + ' ' + dbo.AppUser.LastName AS UserEnteringData, dbo.HCVSpecimen.SpecimenQuality, 
                      dbo.HCVSpecimen.RejectedReason, dbo.HCVSpecimen.Id AS HCVSpecimenId, dbo.HCVSpecimenResult.LabInstrumentId, dbo.HCVSpecimenResult.TestedBy, dbo.HCVSpecimenResult.Copies_ml, 
                      dbo.HCVSpecimenResult.LogCopies, dbo.HCVSpecimenResult.DateCreated AS DateCreatedSpecimenResult, dbo.HCVSpecimenResult.DateUpdated AS DateUpdatedSpecimenResult, 
                      dbo.HCVSpecimenResult.UpdatedById AS UpdatedByIdSpecimenResult, dbo.HCVSpecimenResult.CreatedById AS CreatedByIdSpecimenResult, 
                      SpecimenResultUpdatedBy.FirstName + ' ' + SpecimenResultUpdatedBy.LastName AS ResultApprovedBy, dbo.HCVSpecimenResult.Id AS SpecimenResultId, 
                      dbo.HCVSpecimenResult.FinalReportResult, dbo.HCVSpecimenResult.FinalReportDate, dbo.HCVSpecimenResult.Comment, dbo.HCVStatus.Status, dbo.LabInstrument.LabInstrumentname,
                      dbo.HCVPatient.PatientType
FROM         dbo.HCVSpecimen LEFT OUTER JOIN
                      dbo.HCVRequestForm ON dbo.HCVRequestForm.Id = dbo.HCVSpecimen.HCVRequestId LEFT OUTER JOIN
                      dbo.FacilityType ON dbo.HCVRequestForm.WardId = dbo.FacilityType.Id LEFT OUTER JOIN
                      dbo.HCVPatient ON dbo.HCVRequestForm.PatientId = dbo.HCVPatient.Id LEFT OUTER JOIN
                      dbo.Facility ON dbo.HCVRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
                      dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
                      dbo.HCVTestReason ON dbo.HCVTestReason.Id = dbo.HCVRequestForm.ReasonTest LEFT OUTER JOIN
                      dbo.SpecimenType ON dbo.SpecimenType.Id = dbo.HCVRequestForm.SpecimenType LEFT OUTER JOIN
                      dbo.AppUser ON dbo.HCVSpecimen.UserEnteringData = dbo.AppUser.UserId LEFT OUTER JOIN
                      dbo.Province ON dbo.Province.Id = dbo.HCVRequestForm.ProvinceId LEFT OUTER JOIN
                      dbo.HCVStatus ON dbo.HCVStatus.HCVSpecimenId = dbo.HCVSpecimen.Id LEFT OUTER JOIN
                      dbo.HCVSpecimenResult ON dbo.HCVSpecimenResult.HCVSpecimenId = dbo.HCVSpecimen.Id LEFT OUTER JOIN
                      dbo.LabInstrument ON dbo.HCVSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID LEFT OUTER JOIN
                      dbo.AppUser AS SpecimenResultUpdatedBy ON dbo.HCVSpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId
                      Where  
                        --1 = Case when @SpecimenId = '' Then 1 When HCVSpecimen.Id in (@SpecimenId) --Then 1 END 
                        charindex(',' + CAST(HCVSpecimen.Id as nvarchar(20)) + ',', @SpecimenId) > 0
                        order by dbo.HCVSpecimen.LabNumber asc                   
                        
SELECT  AppUser.UserId AS UserId, AppUser.UserSign As UserSign From dbo.AppUser
GO
/****** Object:  StoredProcedure [dbo].[HCVGetAllListforHistory]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[HCVGetAllListforHistory]	
	@SpecimenId nvarchar(500)=''
AS


DECLARE @LabID int;

--Get Lab ID
set @Labid = (SELECT [Id] FROM [LIS].[dbo].[Laboratory]);

--Create @HCVSpecimen Temp table
     DECLARE  @HCVSpecimen  TABLE( 
                                 Fullname nvarchar(100), 
                                 Sex nvarchar(10), 
                                 Age int,
                                 FacilityId int,
                                 SpecimenId int 
                                 ) 
                                 
 --Create @PatientHistory Temp table
     DECLARE  @PatientHistory  TABLE( 
                                 Fullname nvarchar(100), 
                                 Sex nvarchar(10), 
                                 Age int,
                                 FacilityId int, 
                                 LabNumber nvarchar(50) ,
                                 TestDate datetime,
                                 Result  nvarchar(50),
                                 Copies_ml decimal(18, 2),
                                 LogCopies decimal(18, 2),
                                 Instrument nvarchar(50)
                                 )  
                      
    INSERT @HCVSpecimen (Fullname,Sex,Age,FacilityId,SpecimenId)                             
    SELECT  dbo.HCVPatient.Fullname, dbo.HCVPatient.Sex, dbo.HCVRequestForm.Age,dbo.HCVPatient.FacilityId, HCVSpecimen.Id AS SpecimenId FROM dbo.HCVSpecimen LEFT OUTER JOIN   
	dbo.HCVRequestForm ON dbo.HCVRequestForm.Id = dbo.HCVSpecimen.HCVRequestId LEFT OUTER JOIN                     
    dbo.HCVPatient ON dbo.HCVRequestForm.PatientId = dbo.HCVPatient.Id LEFT OUTER JOIN
    dbo.HCVStatus ON dbo.HCVStatus.HCVSpecimenId = dbo.HCVSpecimen.Id LEFT OUTER JOIN
    dbo.HCVSpecimenResult ON dbo.HCVSpecimenResult.HCVSpecimenId = dbo.HCVSpecimen.Id LEFT OUTER JOIN
    dbo.LabInstrument ON dbo.HCVSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID 
    Where charindex(',' + CAST(HCVSpecimen.Id as nvarchar(20)) + ',', @SpecimenId) > 0 --and HCVPatient.ARTNumber <> '' 
                        

         
DECLARE @MyCursor CURSOR;
DECLARE	@HCVFullname nvarchar(100) = '';
DECLARE	@HCVSex nvarchar(10) = '';
DECLARE	@HCVAge int=0;
DECLARE	@HCVFacilityId int=0;
DECLARE	@HCVSpecimenId int;

BEGIN
    SET @MyCursor = CURSOR FOR
    select Fullname,Sex,Age,FacilityId,SpecimenId from @HCVSpecimen     

    OPEN @MyCursor 
    FETCH NEXT FROM @MyCursor 
    INTO @HCVFullname,@HCVSex,@HCVAge,@HCVFacilityId,@HCVSpecimenId

    WHILE @@FETCH_STATUS = 0
    BEGIN    
      
        INSERT @PatientHistory (Fullname,Sex,Age,FacilityId,LabNumber,TestDate,Result,Copies_ml,LogCopies,Instrument) 
		SELECT HCVPatient.Fullname as Fullname, dbo.HCVPatient.Sex as Sex,dbo.HCVRequestForm.Age as Age ,dbo.HCVPatient.FacilityId as FacilityId,HCVSpecimen.LabNumber as LabNumber , HCVSpecimenResult.FinalReportDate as TestDate, 
		HCVSpecimenResult.FinalReportResult as Result,HCVSpecimenResult.Copies_ml as Copies_ml , HCVSpecimenResult.LogCopies as LogCopies,LabInstrument.LabInstrumentname as Instrument
        FROM dbo.HCVRequestForm LEFT OUTER JOIN 
        dbo.HCVPatient on dbo.HCVPatient.Id = dbo.HCVRequestForm.PatientId Inner Join
        dbo.HCVSpecimen ON dbo.HCVRequestForm.Id = dbo.HCVSpecimen.HCVRequestId Inner  JOIN 
        dbo.HCVSpecimenResult ON dbo.HCVSpecimen.Id = dbo.HCVSpecimenResult.HCVSpecimenId Inner  JOIN
        dbo.HCVStatus ON dbo.HCVSpecimen.Id = dbo.HCVStatus.HCVSpecimenId left Join
        LabInstrument on dbo.LabInstrument.Id = dbo.HCVSpecimenResult.LabInstrumentId  
        Where                      
        1 = Case when @HCVFullname = '' Then 1 When HCVPatient.Fullname  = @HCVFullname Then 1 END and        
		1 = Case when @HCVSex = '' Then 1 When HCVPatient.Sex  = @HCVSex Then 1 END  and
		1 = Case when @HCVAge = 0 Then 1 When HCVRequestForm.Age  = @HCVAge Then 1 END  and
		1 = Case when @HCVFacilityId = 0 Then 1 When HCVPatient.FacilityId  = @HCVFacilityId Then 1 END 
					    
       
      FETCH NEXT FROM @MyCursor 
      INTO @HCVFullname,@HCVSex,@HCVAge,@HCVFacilityId,@HCVSpecimenId
    END; 

    CLOSE @MyCursor ;
    DEALLOCATE @MyCursor;
END;

select * from @PatientHistory group by Fullname,Sex,Age,FacilityId,LabNumber,Result,TestDate,Copies_ml,LogCopies,Instrument;
GO
/****** Object:  StoredProcedure [dbo].[HCVGetPatientByRequestId]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CReate PROCEDURE [dbo].[HCVGetPatientByRequestId]
	@Id int
AS
SELECT     dbo.HCVPatient.Fullname, dbo.HCVPatient.Sex, dbo.HCVPatient.PatientCode, dbo.HCVPatient.ARTNumber, 
					   dbo.Province.ProvinceName, dbo.Facility.FacilityName, 
                      dbo.Facility.HCVSMSNumber, dbo.Facility.HCVEmail, dbo.FacilityType.FacilityTypeName, dbo.LLG.LLGName AS Township, 
                      dbo.HCVRequestForm.Age,dbo.HCVRequestForm.Age_Month, dbo.HCVTestReason.Reasonfortest, 
                      dbo.SpecimenType.SpecimenName, dbo.HCVRequestForm.RegistrationNo, dbo.HCVRequestForm.BatchNumber, dbo.HCVRequestForm.ReasonTest,
                      dbo.HCVRequestForm.SpecimenType, dbo.HCVRequestForm.Adherence, dbo.HCVRequestForm.NurseTelephone,
                      dbo.HCVRequestForm.NameOfNurseOrHEOCollectingDBS, dbo.HCVSpecimen.LabNumber, dbo.HCVSpecimen.specimencollectionTime, dbo.HCVSpecimen.SampleCollectedDate, 
                      dbo.HCVSpecimen.SampleShipmentDate, dbo.HCVSpecimen.RegistrationDate, dbo.AppUser.FirstName + ' ' + dbo.AppUser.LastName AS UserEnteringData, dbo.HCVSpecimen.SpecimenQuality, 
                      dbo.HCVSpecimen.RejectedReason, dbo.HCVSpecimen.RecievedDate,dbo.HCVSpecimen.Id AS HCVSpecimenId, dbo.HCVSpecimenResult.LabInstrumentId, dbo.HCVSpecimenResult.TestedBy, dbo.HCVSpecimenResult.Copies_ml, 
                      dbo.HCVSpecimenResult.LogCopies, dbo.HCVSpecimenResult.DateCreated AS DateCreatedSpecimenResult, dbo.HCVSpecimenResult.DateUpdated AS DateUpdatedSpecimenResult, 
                      dbo.HCVSpecimenResult.UpdatedById AS UpdatedByIdSpecimenResult, dbo.HCVSpecimenResult.CreatedById AS CreatedByIdSpecimenResult, 
                      SpecimenResultUpdatedBy.FirstName + ' ' + SpecimenResultUpdatedBy.LastName AS ResultApprovedBy, dbo.HCVSpecimenResult.Id AS SpecimenResultId, 
                      dbo.HCVSpecimenResult.FinalReportResult, dbo.HCVSpecimenResult.FinalReportDate, dbo.HCVSpecimenResult.Comment, dbo.HCVStatus.Status, dbo.LabInstrument.LabInstrumentname
                    
FROM         dbo.HCVSpecimen LEFT OUTER JOIN
                      dbo.HCVRequestForm ON dbo.HCVRequestForm.Id = dbo.HCVSpecimen.HCVRequestId LEFT OUTER JOIN
                      dbo.FacilityType ON dbo.HCVRequestForm.WardId = dbo.FacilityType.Id LEFT OUTER JOIN
                      dbo.HCVPatient ON dbo.HCVRequestForm.PatientId = dbo.HCVPatient.Id LEFT OUTER JOIN
                      dbo.Facility ON dbo.HCVRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
                      dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
                      dbo.HCVTestReason ON dbo.HCVTestReason.Id = dbo.HCVRequestForm.ReasonTest LEFT OUTER JOIN
                      dbo.SpecimenType ON dbo.SpecimenType.Id = dbo.HCVRequestForm.SpecimenType LEFT OUTER JOIN
                      dbo.AppUser ON dbo.HCVSpecimen.UserEnteringData = dbo.AppUser.UserId LEFT OUTER JOIN
                      dbo.Province ON dbo.Province.Id = dbo.HCVRequestForm.ProvinceId LEFT OUTER JOIN
                      dbo.HCVStatus ON dbo.HCVStatus.HCVSpecimenId = dbo.HCVSpecimen.Id LEFT OUTER JOIN
                      dbo.HCVSpecimenResult ON dbo.HCVSpecimenResult.HCVSpecimenId = dbo.HCVSpecimen.Id LEFT OUTER JOIN
                      dbo.LabInstrument ON dbo.HCVSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID LEFT OUTER JOIN
                      dbo.AppUser AS SpecimenResultUpdatedBy ON dbo.HCVSpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId
                      Where  
                       HCVRequestForm.Id = @Id;                        

--SELECT HCVPatientTherapies.* FROM HCVPatientTherapies where HCVPatientTherapies.RequestFormId =  @Id;
GO
/****** Object:  StoredProcedure [dbo].[HCVPatientHistory]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[HCVPatientHistory]
	@Fullname nvarchar(100) = '',
	@Sex nvarchar(10) = '',
	@Age int=0,
	@FacilityId int=0
	
AS
SELECT HCVPatient.PatientCode as PatientCode, HCVSpecimen.LabNumber as LabNumber , 
HCVSpecimenResult.FinalReportDate as TestDate, HCVSpecimenResult.FinalReportResult as Result,HCVSpecimenResult.Copies_ml as Copies_ml , HCVSpecimenResult.LogCopies as LogCopies,LabInstrument.LabInstrumentname as Instrument
                          FROM dbo.HCVRequestForm LEFT OUTER JOIN 
                          dbo.HCVPatient on dbo.HCVPatient.Id = dbo.HCVRequestForm.PatientId Inner Join
                          dbo.HCVSpecimen ON dbo.HCVRequestForm.Id = dbo.HCVSpecimen.HCVRequestId Inner  JOIN 
                          dbo.HCVSpecimenResult ON dbo.HCVSpecimen.Id = dbo.HCVSpecimenResult.HCVSpecimenId Inner  JOIN
                          dbo.HCVStatus ON dbo.HCVSpecimen.Id = dbo.HCVStatus.HCVSpecimenId left Join
                          LabInstrument on dbo.LabInstrument.Id = dbo.HCVSpecimenResult.LabInstrumentId  
                      Where   
                        1 = Case when @Fullname = '' Then 1 When HCVPatient.Fullname  = @Fullname Then 1 END and        
					    1 = Case when @Sex = '' Then 1 When HCVPatient.Sex  = @Sex Then 1 END  and
					    1 = Case when @Age = 0 Then 1 When HCVRequestForm.Age  = @Age Then 1 END  and
					    1 = Case when @FacilityId = 0 Then 1 When HCVPatient.FacilityId  = @FacilityId Then 1 END
GO
/****** Object:  StoredProcedure [dbo].[LabSummaryReport]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[LabSummaryReport]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)=''
AS
SELECT Distinct           COUNT(Distinct dbo.RequestForm.PatientId) as No_Patient, COUNT(dbo.RequestForm.Id) AS 'No_Sample_Recieved', 
                          COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Rejected' THEN 1 END) AS 'No_Rejected_Sample',
                          COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' THEN 1 END ) As 'No_of_Sample_Tested',
                          COUNT(CASE WHEN Status.Status = 'RecivedFromFacility' THEN 1 END ) As 'No_of_Sample_Not_Tested',
                          COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' or  SpecimenResult.FinalReportResult = 'Detected' THEN 1 END) AS 'No_Positive',
                          COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Negative' or  SpecimenResult.FinalReportResult = 'Not Detected'THEN 1 END) AS 'No_Negative',
                          nullif(COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' or  SpecimenResult.FinalReportResult = 'Detected' THEN 1 END) * 100,0) / COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' THEN 1 END ) AS 'Proportion_of_Positive_Infants',
                          COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Unknown' THEN 1 END) AS 'No_Indeterminate',
                          nullif(COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' or  SpecimenResult.FinalReportResult = 'Detected' THEN 1 END) * 100,0) / COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' THEN 1 END ) AS 'Positivity_Rate' 
                          FROM dbo.RequestForm LEFT OUTER JOIN 
                          dbo.RequestRejectedReason ON dbo.RequestForm.Id = dbo.RequestRejectedReason.RequestId Inner  JOIN 
                          dbo.Province ON dbo.RequestForm.ProvinceId = dbo.Province.Id Inner JOIN 
                          dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId Inner JOIN 
                          dbo.SpecimenResult ON dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId Inner JOIN
                         Status ON dbo.Specimen.Id = dbo.Status.SpecimenId
                          
                      Where    1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When SpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END
GO
/****** Object:  StoredProcedure [dbo].[LabSummaryReportByOutstanding]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[LabSummaryReportByOutstanding]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@CollectionFrom nvarchar(100)='' ,
	@CollectionTo nvarchar(100)='',
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' 
AS
Begin
DECLARE @EIDFacility  TABLE(ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))

DECLARE @Outstanding TABLE (No_Outstanding int,
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
							LaboratoryName nvarchar(50))
							
DECLARE @Report1 TABLE (    No_Patient int,
							No_Sample_Recieved int,
							No_Rejected_Sample int,							
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
							LaboratoryName nvarchar(50)) 
							
DECLARE @Report2 TABLE (    No_of_Sample_Tested int,
							No_of_Sample_Not_Tested int,
							No_Positive int,
							No_Negative int,
							Proportion_of_Positive_Infants int,
							No_Indeterminate int,
							Invalid_Error int,
							Positivity_Rate int,
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
							LaboratoryName nvarchar(50))     
							
							
DECLARE @ReportAll TABLE (  No_Outstanding int,
							No_Patient int,
							No_Sample_Recieved int,
							No_Rejected_Sample int,
							No_of_Sample_Tested int,
							No_of_Sample_Not_Tested int,
							No_Positive int,
							No_Negative int,
							Proportion_of_Positive_Infants int,
							No_Indeterminate int,
							Invalid_Error int,
							Positivity_Rate int,
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
							LaboratoryName nvarchar(50))  
							
INSERT @EIDFacility (ProvinceName,FacilityName,LaboratoryName)                                      
SELECT  Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
FROM dbo.RequestForm LEFT OUTER JOIN 
dbo.RequestRejectedReason ON dbo.RequestForm.Id = dbo.RequestRejectedReason.RequestId LEFT OUTER JOIN 
dbo.Province ON dbo.RequestForm.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT OUTER JOIN 
dbo.SpecimenResult ON dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId LEFT OUTER JOIN 
Status ON dbo.Specimen.Id = dbo.Status.SpecimenId LEFT OUTER JOIN 
dbo.Facility ON dbo.Facility.Id = dbo.RequestForm.FacilityId 
Where  
1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.Specimen.RecievedDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.Specimen.SampleCollectedDate between @CollectionFrom and @CollectionTo  Then 1 END
and 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.SpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.SpecimenResult.FinalReportDate between @CollectionFrom and @CollectionTo  Then 1 END
and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
Group by Province.ProvinceName,Facility.FacilityName
       
if (@DateFrom <> '' and  @DateTo <> '') or (@CollectionFrom <> '' and  @CollectionTo <>'')
Begin
--@Outstanding
INSERT @Outstanding (No_Outstanding,ProvinceName,FacilityName,LaboratoryName)
SELECT  Distinct COUNT(dbo.RequestForm.Id),Province.ProvinceName as ProvinceName,
Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
FROM dbo.RequestForm LEFT OUTER JOIN 
dbo.RequestRejectedReason ON dbo.RequestForm.Id = dbo.RequestRejectedReason.RequestId LEFT OUTER JOIN 
dbo.Province ON dbo.RequestForm.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT OUTER JOIN 
dbo.SpecimenResult ON dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId LEFT OUTER JOIN 
Status ON dbo.Specimen.Id = dbo.Status.SpecimenId LEFT OUTER JOIN 
dbo.Facility ON dbo.Facility.Id = dbo.RequestForm.FacilityId 
Where  
1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.Specimen.RecievedDate between '01-01-1900' and DATEADD(dd, -1, @DateFrom) Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.Specimen.SampleCollectedDate between '01-01-1900' and DATEADD(dd, -1, @CollectionFrom)  Then 1 END
and 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.SpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.SpecimenResult.FinalReportDate between @CollectionFrom and @CollectionTo  Then 1 END
and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
Group by Province.ProvinceName,Facility.FacilityName
End

--@Report1
INSERT @Report1 (No_Patient,No_Sample_Recieved,No_Rejected_Sample,ProvinceName,FacilityName,LaboratoryName)
SELECT   COUNT(Distinct dbo.RequestForm.PatientId),COUNT(dbo.RequestForm.Id),
COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Rejected' THEN 1 END),
Province.ProvinceName ,Facility.FacilityName ,(Select dbo.Laboratory.Description from dbo.Laboratory) 

FROM dbo.RequestForm LEFT OUTER JOIN 
dbo.RequestRejectedReason ON dbo.RequestForm.Id = dbo.RequestRejectedReason.RequestId LEFT OUTER JOIN 
dbo.Province ON dbo.RequestForm.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT OUTER JOIN 
dbo.SpecimenResult ON dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId LEFT OUTER JOIN 
Status ON dbo.Specimen.Id = dbo.Status.SpecimenId LEFT OUTER JOIN 
dbo.Facility ON dbo.Facility.Id = dbo.RequestForm.FacilityId 
Where  
 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.Specimen.RecievedDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.Specimen.SampleCollectedDate between @CollectionFrom and @CollectionTo  Then 1 END
and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
Group by Province.ProvinceName,Facility.FacilityName

--@Report2
 
INSERT @Report2 (No_of_Sample_Tested ,No_of_Sample_Not_Tested ,No_Positive,No_Negative ,Proportion_of_Positive_Infants ,No_Indeterminate ,
Invalid_Error,Positivity_Rate ,	ProvinceName ,FacilityName ,LaboratoryName )
SELECT	 COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' and  Status.Status != 'RecivedFromFacility' THEN 1 END ) ,
        COUNT(CASE WHEN Status.Status = 'RecivedFromFacility' THEN 1 END ) ,
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' THEN 1 END) + COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Detected' THEN 1 END) ,
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Negative' THEN 1 END) + COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Not Detected'THEN 1 END),
        nullif(COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' or  SpecimenResult.FinalReportResult = 'Detected' THEN 1 END) * 100,0) / COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' THEN 1 END ) ,
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Indeterminate' THEN 1 END) ,
        COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Invalid/Error' THEN 1 END) +  COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Unknown' THEN 1 END)   ,
        nullif(COUNT(CASE WHEN SpecimenResult.FinalReportResult = 'Positive' or  SpecimenResult.FinalReportResult = 'Detected' THEN 1 END) * 100,0) / COUNT(CASE WHEN SpecimenResult.FinalReportResult != 'Rejected' THEN 1 END ) ,       
		Province.ProvinceName ,Facility.FacilityName ,(Select dbo.Laboratory.Description from dbo.Laboratory) 

FROM dbo.RequestForm LEFT OUTER JOIN 
dbo.RequestRejectedReason ON dbo.RequestForm.Id = dbo.RequestRejectedReason.RequestId LEFT OUTER JOIN 
dbo.Province ON dbo.RequestForm.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
dbo.Specimen ON dbo.RequestForm.Id = dbo.Specimen.RequestId LEFT OUTER JOIN 
dbo.SpecimenResult ON dbo.Specimen.Id = dbo.SpecimenResult.SpecimenId LEFT OUTER JOIN 
Status ON dbo.Specimen.Id = dbo.Status.SpecimenId LEFT OUTER JOIN 
dbo.Facility ON dbo.Facility.Id = dbo.RequestForm.FacilityId 
Where  
 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.SpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.SpecimenResult.FinalReportDate between @CollectionFrom and @CollectionTo  Then 1 END
and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
Group by Province.ProvinceName,Facility.FacilityName

INSERT  @ReportAll (ProvinceName,FacilityName,LaboratoryName)                                      
SELECT  ProvinceName,FacilityName, LaboratoryName FROM @EIDFacility

DECLARE @MyCursor CURSOR;
DECLARE	@ProvinceName nvarchar(100) = '';
DECLARE	@FacilityName nvarchar(100) = '';

BEGIN
SET @MyCursor = CURSOR FOR
    select ProvinceName,FacilityName from @EIDFacility     

    OPEN @MyCursor 
    FETCH NEXT FROM @MyCursor 
    INTO @ProvinceName,@FacilityName

    WHILE @@FETCH_STATUS = 0
    BEGIN    
    --Outstanding
     Update A set No_Outstanding=ISNULL(OT.No_Outstanding, 0 )    
     from @ReportAll A LEFT OUTER JOIN @Outstanding OT on A.ProvinceName = ot.ProvinceName and 
	 A.FacilityName = ot.FacilityName where A.ProvinceName=@ProvinceName and A.FacilityName=@FacilityName;
	 
	 --Report1
     Update A set No_Patient=ISNULL(OT.No_Patient, 0 ),
     No_Sample_Recieved=ISNULL(OT.No_Sample_Recieved, 0 ),
     No_Rejected_Sample=ISNULL(OT.No_Rejected_Sample, 0 )     
     from @ReportAll A LEFT OUTER JOIN @Report1 OT on A.ProvinceName = ot.ProvinceName and 
	 A.FacilityName = ot.FacilityName where A.ProvinceName=@ProvinceName and A.FacilityName=@FacilityName;

	--Report2
	 Update A set No_of_Sample_Tested=ISNULL(OT.No_of_Sample_Tested, 0 ),
	 No_of_Sample_Not_Tested=ISNULL(OT.No_of_Sample_Not_Tested, 0 ),
     No_Positive=ISNULL(OT.No_Positive, 0 ),
     No_Negative=ISNULL(OT.No_Negative, 0 ),
     No_Indeterminate=ISNULL(OT.No_Indeterminate, 0 ),
     Proportion_of_Positive_Infants=ISNULL(OT.Proportion_of_Positive_Infants, 0 ),
     Invalid_Error=ISNULL(OT.Invalid_Error, 0 ),
     Positivity_Rate=ISNULL(OT.Positivity_Rate, 0 )
     from @ReportAll A LEFT OUTER JOIN @Report2 OT on A.ProvinceName = ot.ProvinceName and 
	 A.FacilityName = ot.FacilityName where A.ProvinceName=@ProvinceName and A.FacilityName=@FacilityName;
	 
	 Update @ReportAll set 
	 No_of_Sample_Not_Tested=((No_Outstanding+No_Sample_Recieved)- (No_of_Sample_Tested+No_Rejected_Sample))
  	 
	  FETCH NEXT FROM @MyCursor 
    INTO @ProvinceName,@FacilityName
    END
   
    CLOSE @MyCursor ;
    DEALLOCATE @MyCursor;
END

select * from @ReportAll
End
GO
/****** Object:  StoredProcedure [dbo].[PullAllEIDData]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[PullAllEIDData]      
    
AS
INSERT INTO [LISSyncDB].[dbo].[EIDSummary]
           ([Id]
           ,[PatientCode]
           ,[FirstName]
           ,[MiddleName]
           ,[Surname]
           ,[DateOfBirth]
           ,[Sex]
           ,[MorGFirstName]
           ,[MorGMiddleName]
           ,[MorGSurname]
           ,[MorGTelNumber]
           ,[MorGResidingRegionState]
           ,[MorGResidingGTownShip]
           ,[PatientType]
           ,[PMTCTCode]
           ,[BatchNumber]
           ,[FacilityId]
           ,[Age]
           ,[ageinweeks]
           ,[ReasonTest]
           ,[SpecimenType]
           ,[PreviousLabNumber]
           ,[NameOfNurseOrHEOCollectingDBS]
           ,[MotherHIVStatus]
           ,[FatherHIVStatus]
           ,[ModeOfDelivery]
           ,[MotherARVStatus]
           ,[IfARVStatusOnWeekStarted]
           ,[DifficultBirth]
           ,[VillageBirth]
           ,[MotherARVRegimen]
           ,[TimingIfMotherARVRegimenOther]
           ,[InfantARVStatus]
           ,[TimingIfInfantARVSatusOther]
           ,[ExclusiveBreastFeeding]
           ,[ExclusiveReplacementFeeding]
           ,[IfReplacementYesAgeAtWean]
           ,[MixedFeeding]
           ,[BreastFeedingUnknown]
           ,[Agewhenlastbreastfed]
           ,[AnyPriorHIVTestResult]
           ,[PriorHIVTestResult]
           ,[PriorHIVTestDate]
           ,[PriorTestType]
           ,[RequestFormCreatedDate]
           ,[RequestFormUpdatedDate]
           ,[LabNumber]
           ,[RecievedDate]
           ,[SampleCollectedDate]
           ,[SampleShipmentDate]
           ,[RegistrationDate]
           ,[DBSSpecimenQuality]
           ,[RejectedReasonId]
           ,[SpecimenCreatedDate]
           ,[SpecimenUpdateDate]
           ,[FirstTestDate]
           ,[FirstTestResult]
           ,[RepeatTest]
           ,[RepeatReason]
           ,[SecondTestResult]
           ,[SecondTestDate]
           ,[RepeatSecondTest]
           ,[RepeatReasonSecondTest]
           ,[ThirdTestResult]
           ,[ThirdTestDate]
           ,[FinalReportResult]
           ,[FinalReportDate]
           ,[SecondDBSRequired]
           ,[FirstTestAbsorbanceValue]
           ,[SecondTestAbsorbanceValue]
           ,[ThirdTestAbsorbanceValue]
           ,[Comment]
           ,[TestedBy]
           ,[ResultCreatedDate]
           ,[ResultUpdatedDate]
           ,[LabInstrumentname]
           ,[LabInstrumentId]
           ,[StatusId]
           ,[Status]
           ,[DateChanged]
           ,[Lab]
           ,[LabCode]
           ,[ResultApprovedBy]
           ,[RequestId]
           ,[SpecimenId]
           ,[SpecimenResultId]
           )
     Select
			NEWID()
		   ,Patient.PatientCode
           ,Patient.FirstName
           ,Patient.MiddleName
           ,Patient.Surname
           ,Patient.DateOfBirth
           ,Patient.Sex
          ,Patient.MorGFirstName
           ,Patient.MorGMiddleName
           ,Patient.MorGSurname
           ,Patient.MorGTelNumber          
           ,Patient.MorGResidingRegionState
           ,patient.MorGResidingGTownShip
           ,Patient.PatientType
           ,Patient.PMTCTCode
           ,RequestForm.BatchNumber
           ,RequestForm.FacilityId           
           ,RequestForm.Age
           ,RequestForm.ageinweeks
           ,RequestForm.ReasonTest
           ,RequestForm.SpecimenType
           ,RequestForm.PreviousLabNumber
           ,RequestForm.NameOfNurseOrHEOCollectingDBS
           ,RequestForm.MotherHIVStatus
           ,RequestForm.FatherHIVStatus
           ,RequestForm.ModeOfDelivery
           ,RequestForm.MotherARVStatus
           ,RequestForm.IfARVStatusOnWeekStarted
           ,RequestForm.DifficultBirth
           ,RequestForm.VillageBirth
           ,RequestForm.MotherARVRegimen
           ,RequestForm.TimingIfMotherARVRegimenOther
           ,RequestForm.InfantARVStatus
           ,RequestForm.TimingIfInfantARVSatusOther
           ,RequestForm.ExclusiveBreastFeeding
           ,RequestForm.ExclusiveReplacementFeeding
           ,RequestForm.IfReplacementYesAgeAtWean
           ,RequestForm.MixedFeeding
           ,RequestForm.BreastFeedingUnknown
           ,RequestForm.Agewhenlastbreastfed
           ,RequestForm.AnyPriorHIVTestResult
           ,RequestForm.PriorHIVTestResult
           ,RequestForm.PriorHIVTestDate
           ,RequestForm.PriorTestType
           ,RequestForm.DateCreated
           ,RequestForm.DateUpdated
           ,Specimen.LabNumber
           ,Specimen.RecievedDate
           ,Specimen.SampleCollectedDate
           ,Specimen.SampleShipmentDate
           ,Specimen.RegistrationDate
           ,Specimen.DBSSpecimenQuality           
           ,RequestRejectedReason.RejectedReasonId
           ,Specimen.DateCreated
           ,Specimen.DateUpdated           
           ,SpecimenResult.FirstTestDate
           ,SpecimenResult.FirstTestResult
           ,SpecimenResult.RepeatTest
           ,SpecimenResult.RepeatReason
           ,SpecimenResult.SecondTestResult
           ,SpecimenResult.SecondTestDate
           ,SpecimenResult.RepeatSecondTest
           ,SpecimenResult.RepeatReasonSecondTest
           ,SpecimenResult.ThirdTestResult
           ,SpecimenResult.ThirdTestDate
           ,SpecimenResult.FinalReportResult
           ,SpecimenResult.FinalReportDate
           ,SpecimenResult.SecondDBSRequired
           ,SpecimenResult.FirstTestAbsorbanceValue
           ,SpecimenResult.SecondTestAbsorbanceValue
           ,SpecimenResult.ThirdTestAbsorbanceValue
           ,SpecimenResult.Comment
           ,SpecimenResult.TestedBy           
           ,SpecimenResult.DateCreated
           ,SpecimenResult.DateUpdated
           ,LabInstrument.LabInstrumentname           
           ,LabInstrument.ID
           ,Status.Id
           ,Status.Status
           ,Status.DateChanged
           ,(Select dbo.Laboratory.LaboratoryName from dbo.Laboratory)  as Lab
           ,(Select dbo.Laboratory.LabCode from dbo.Laboratory)  as LabCode
           ,(SpecimenResultUpdatedBy.FirstName  + '' + SpecimenResultUpdatedBy.LastName) AS ResultApprovedBy
           ,RequestForm.Id   
           ,Specimen.Id     
           ,SpecimenResult.Id
			
			From Patient left JOIN
			RequestForm on Patient.Id = RequestForm.PatientId left JOIN
			RequestRejectedReason on RequestForm.Id=RequestRejectedReason.RequestId left JOIN
			Specimen on RequestForm.Id = Specimen.RequestId left JOIN
			SpecimenResult on Specimen.Id = SpecimenResult.SpecimenId left JOIN
			Status on Specimen.Id = Status.SpecimenId left JOIN
			Facility on RequestForm.FacilityId = Facility.Id left JOIN
			LabInstrument On SpecimenResult.LabInstrumentId = LabInstrument.ID left JOIN
			SpecimenType On RequestForm.SpecimenType = SpecimenType.Id  left JOIN
			AppUser As SpecimenResultUpdatedBy ON SpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId 
	           
			Where Status.Status = 'Printed' AND
            Specimen.Id Not IN (Select SpecimenId from LISSYncDB.[dbo].[EIDSummary]);
GO
/****** Object:  StoredProcedure [dbo].[PullALLVLData]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[PullALLVLData] 

AS
INSERT INTO [LISSyncDB].[dbo].[VLSummary]
           ([Id]
           ,[Fullname]
           ,[PatientCode]
           ,[PatientType]
           ,[ARTNumber]
           ,[Sex]
           ,[DateOfBirth]
           ,[ResidingRegionState]
           ,[ResidingGTownShip]
           ,[RegistrationNo]
           ,[BatchNumber]
           ,[FacilitytId]
           ,[Age]
           ,[Age_Month]
           ,[CurrentRegimen]
           ,[ARVRegimen]
           ,[ageinweeks]
           ,[ReasonTestId]
           ,[ReasonfortestOther]
           ,[SpecimenTypeId]
           ,[PreviousLabNumber]
           ,[NameOfNurseOrHEOCollectingDBS]
           ,[Adherence]
           ,[PrevVLcopiesml]
           ,[PrevVLLog]
           ,[Mostrecentviralload]
           ,[MostrecentviralloadLog]
           ,[Mostrecentviralloadresult]
           ,[Daterecentviralload]
           ,[BaselineCD4count]
           ,[MostrecentCD4count]
           ,[DateCD4Test]
           ,[Patientontherapy]
           ,[ARTStaringDate]
           ,[SecondLineARTStartingDate]
           ,[Patientevertherapy]
           ,[SampleStored]
           ,[Temperature]
           ,[Duration]
           ,[RequestCreatedDate]
           ,[RequestUpdatedDate]
           ,[LabNumber]
           ,[CreatedDate]
           ,[RecievedDate]
           ,[SampleCollectedDate]
           ,[SampleShipmentDate]
           ,[specimencollectionTime]
           ,[RegistrationDate]
           ,[SpecimenQuality]
           ,[RejectedReasonId]
           ,[FinalReportResult]
           ,[FinalReportDate]
           ,[Comment]
           ,[Copies_ml]
           ,[LogCopies]
           ,[ResultCreatedDate]
           ,[ResultUpdatedDate]
           ,[Reasonfortest]
           ,[LabInstrumentname]
           ,[LabInstrumentId]
           ,[ResultCreatedBy]
           ,[ResultApprovedBy]
           ,[TestedBy]
           ,[StatusId]
           ,[Status]
           ,[DateChanged]
           ,[Lab]
           ,[LabCode]
           ,[Treatment]
           ,[Drug]
           ,[RequestId]
           ,[SpecimenId]
           ,[SpecimenResultId]
           ,[PatientId])
          
      Select
            NEWID()
           ,VLPatient.Fullname
           ,VLPatient.PatientCode
           ,VLPatient.PatientType
           ,VLPatient.ARTNumber
           ,VLPatient.Sex
           ,VLPatient.DateOfBirth
           ,VLPatient.ResidingRegionState
           ,VLPatient.ResidingGTownShip
           ,VLRequestForm.RegistrationNo
           ,VLRequestForm.BatchNumber
           ,Facility.Id
           ,VLRequestForm.Age
           ,VLRequestForm.Age_Month
           ,VLRequestForm.CurrentRegimen
           ,VLRequestForm.ARVRegimenName
           ,VLRequestForm.ageinweeks
           ,VLTestReason.Id
           ,VLRequestForm.ReasonfortestOther
           ,SpecimenType.Id
           ,VLRequestForm.PreviousLabNumber
           ,VLRequestForm.NameOfNurseOrHEOCollectingDBS
           ,VLRequestForm.Adherence
           ,VLRequestForm.PrevVLcopiesml
           ,VLRequestForm.PrevVLLog
           ,VLRequestForm.Mostrecentviralload
           ,VLRequestForm.MostrecentviralloadLog
           ,VLRequestForm.Mostrecentviralloadresult
           ,VLRequestForm.Daterecentviralload
           ,VLRequestForm.BaselineCD4count
           ,VLRequestForm.MostrecentCD4count
           ,VLRequestForm.DateCD4Test
           ,VLRequestForm.Patientontherapy
           ,VLRequestForm.ARTStaringDate
           ,VLRequestForm.SecondLineARTStartingDate
           ,VLRequestForm.Patientevertherapy
           ,VLRequestForm.SampleStored
           ,VLRequestForm.Temperature
           ,VLRequestForm.Duration
           ,VLRequestForm.Datecreated
           ,VLRequestForm.Dateupdated
           ,VLSpecimen.LabNumber
         ,VLSpecimen.DateUpdated
           ,VLSpecimen.RecievedDate
           ,VLSpecimen.SampleCollectedDate
           ,VLSpecimen.SampleShipmentDate
           ,VLSpecimen.specimencollectionTime
           ,VLSpecimen.RegistrationDate
           ,VLSpecimen.SpecimenQuality
           ,VLRequestRejectedReason.Id
           ,VLSpecimenResult.FinalReportResult
           ,VLSpecimenResult.FinalReportDate
           ,VLSpecimenResult.Comment
           ,VLSpecimenResult.Copies_ml
           ,VLSpecimenResult.LogCopies
           ,VLSpecimenResult.DateCreated
           ,VLSpecimenResult.DateUpdated 
           ,VLTestReason.Reasonfortest  
            ,LabInstrument.LabInstrumentname
           ,LabInstrument.ID
           ,(VLSpecimenResultCreatedBy.FirstName  + '' + VLSpecimenResultCreatedBy.LastName) AS ResultCreatedBy
           ,(VLSpecimenResultUpdatedBy.FirstName  + '' + VLSpecimenResultUpdatedBy.LastName) AS ResultApprovedBy
           ,VLSpecimenResult.TestedBy
           ,VLStatus.Id
           ,VLStatus.Status
           ,VLStatus.DateChanged
           ,(Select dbo.Laboratory.LaboratoryName from dbo.Laboratory)  as Lab
           ,(Select dbo.Laboratory.LabCode from dbo.Laboratory)  as LabCode
           ,(Select t.VLTTreatement from fnGetVLTreatement(VLRequestForm.Id)as t)
           ,(Select t.VLDrug from fnGetVLDrug(VLRequestForm.Id)as t)
           ,VLRequestForm.Id  
           ,VLSpecimen.Id   
           ,VLSpecimenResult.Id
           ,VLPatient.Id
           from  dbo.VLSpecimen LEFT OUTER JOIN
                      dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN  
                      dbo.VLRequestRejectedReason on  VLRequestForm.Id = VLRequestRejectedReason.RejectedReasonId LEFT OUTER JOIN                 
                      dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
                      dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN                   
                      dbo.VLTestReason ON dbo.VLTestReason.Id = dbo.VLRequestForm.ReasonTest LEFT OUTER JOIN
                      dbo.SpecimenType ON dbo.SpecimenType.Id = dbo.VLRequestForm.SpecimenType LEFT OUTER JOIN                 
                      dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.LabInstrument ON dbo.VLSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID LEFT OUTER JOIN
                      dbo.AppUser As VLSpecimenResultUpdatedBy ON VLSpecimenResult.UpdatedById = VLSpecimenResultUpdatedBy.UserId LEFT OUTER JOIN
                      dbo.AppUser As VLSpecimenResultCreatedBy ON VLSpecimenResult.CreatedById = VLSpecimenResultCreatedBy.UserId 
           Where VLStatus.Status = 'Printed' AND
           VLSpecimen.Id Not IN (Select SpecimenId from LISSYncDB.[dbo].[VLSummary]);
GO
/****** Object:  StoredProcedure [dbo].[PullVLData]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[PullVLData] 
@SpecimenId int      
AS
INSERT INTO [LISSyncDB].[dbo].[VLSummary]
           ([Id]
           ,[Fullname]
           ,[PatientCode]
           ,[PatientType]
           ,[ARTNumber]
           ,[Sex]
           ,[DateOfBirth]
           ,[ResidingRegionState]
           ,[ResidingGTownShip]
           ,[RegistrationNo]
           ,[BatchNumber]
           ,[FacilitytId]
           ,[Age]
           ,[Age_Month]
           ,[CurrentRegimen]
           ,[ARVRegimen]
           ,[ageinweeks]
           ,[ReasonTestId]
           ,[ReasonfortestOther]
           ,[SpecimenTypeId]
           ,[PreviousLabNumber]
           ,[NameOfNurseOrHEOCollectingDBS]
           ,[Adherence]
           ,[PrevVLcopiesml]
           ,[PrevVLLog]
           ,[Mostrecentviralload]
           ,[MostrecentviralloadLog]
           ,[Mostrecentviralloadresult]
           ,[Daterecentviralload]
           ,[BaselineCD4count]
           ,[MostrecentCD4count]
           ,[DateCD4Test]
           ,[Patientontherapy]
           ,[ARTStaringDate]
           ,[SecondLineARTStartingDate]
           ,[Patientevertherapy]
           ,[SampleStored]
           ,[Temperature]
           ,[Duration]
           ,[RequestCreatedDate]
           ,[RequestUpdatedDate]
           ,[LabNumber]
           ,[CreatedDate]
           ,[RecievedDate]
           ,[SampleCollectedDate]
           ,[SampleShipmentDate]
           ,[specimencollectionTime]
           ,[RegistrationDate]
           ,[SpecimenQuality]
           ,[RejectedReasonId]
           ,[FinalReportResult]
           ,[FinalReportDate]
           ,[Comment]
           ,[Copies_ml]
           ,[LogCopies]
           ,[ResultCreatedDate]
           ,[ResultUpdatedDate]
           ,[Reasonfortest]
           ,[LabInstrumentname]
           ,[LabInstrumentId]
           ,[ResultCreatedBy]
           ,[ResultApprovedBy]
           ,[TestedBy]
           ,[StatusId]
           ,[Status]
           ,[DateChanged]
           ,[Lab]
           ,[LabCode]
           ,[Treatment]
           ,[Drug]
           ,[RequestId]
           ,[SpecimenId]
           ,[SpecimenResultId]
           ,[PatientId])
          
      Select
            NEWID()
           ,VLPatient.Fullname
           ,VLPatient.PatientCode
           ,VLPatient.PatientType
           ,VLPatient.ARTNumber
           ,VLPatient.Sex
           ,VLPatient.DateOfBirth
           ,VLPatient.ResidingRegionState
           ,VLPatient.ResidingGTownShip
           ,VLRequestForm.RegistrationNo
           ,VLRequestForm.BatchNumber
           ,Facility.Id
           ,VLRequestForm.Age
           ,VLRequestForm.Age_Month
           ,VLRequestForm.CurrentRegimen
           ,VLRequestForm.ARVRegimenName
           ,VLRequestForm.ageinweeks
           ,VLTestReason.Id
           ,VLRequestForm.ReasonfortestOther
           ,SpecimenType.Id
           ,VLRequestForm.PreviousLabNumber
           ,VLRequestForm.NameOfNurseOrHEOCollectingDBS
           ,VLRequestForm.Adherence
           ,VLRequestForm.PrevVLcopiesml
           ,VLRequestForm.PrevVLLog
           ,VLRequestForm.Mostrecentviralload
           ,VLRequestForm.MostrecentviralloadLog
           ,VLRequestForm.Mostrecentviralloadresult
           ,VLRequestForm.Daterecentviralload
           ,VLRequestForm.BaselineCD4count
           ,VLRequestForm.MostrecentCD4count
           ,VLRequestForm.DateCD4Test
           ,VLRequestForm.Patientontherapy
           ,VLRequestForm.ARTStaringDate
           ,VLRequestForm.SecondLineARTStartingDate
           ,VLRequestForm.Patientevertherapy
           ,VLRequestForm.SampleStored
           ,VLRequestForm.Temperature
           ,VLRequestForm.Duration
           ,VLRequestForm.Datecreated
           ,VLRequestForm.Dateupdated
           ,VLSpecimen.LabNumber
         ,VLSpecimen.DateUpdated
           ,VLSpecimen.RecievedDate
           ,VLSpecimen.SampleCollectedDate
           ,VLSpecimen.SampleShipmentDate
           ,VLSpecimen.specimencollectionTime
           ,VLSpecimen.RegistrationDate
           ,VLSpecimen.SpecimenQuality
           ,VLRequestRejectedReason.Id
           ,VLSpecimenResult.FinalReportResult
           ,VLSpecimenResult.FinalReportDate
           ,VLSpecimenResult.Comment
           ,VLSpecimenResult.Copies_ml
           ,VLSpecimenResult.LogCopies
           ,VLSpecimenResult.DateCreated
           ,VLSpecimenResult.DateUpdated 
           ,VLTestReason.Reasonfortest  
            ,LabInstrument.LabInstrumentname
           ,LabInstrument.ID
           ,(VLSpecimenResultCreatedBy.FirstName  + '' + VLSpecimenResultCreatedBy.LastName) AS ResultCreatedBy
           ,(VLSpecimenResultUpdatedBy.FirstName  + '' + VLSpecimenResultUpdatedBy.LastName) AS ResultApprovedBy
           ,VLSpecimenResult.TestedBy
           ,VLStatus.Id
           ,VLStatus.Status
           ,VLStatus.DateChanged
           ,(Select dbo.Laboratory.LaboratoryName from dbo.Laboratory)  as Lab
           ,(Select dbo.Laboratory.LabCode from dbo.Laboratory)  as LabCode
           ,(Select t.VLTTreatement from fnGetVLTreatement(VLRequestForm.Id)as t)
           ,(Select t.VLDrug from fnGetVLDrug(VLRequestForm.Id)as t)
           ,VLRequestForm.Id  
           ,VLSpecimen.Id   
           ,VLSpecimenResult.Id
           ,VLPatient.Id
           from  dbo.VLSpecimen LEFT OUTER JOIN
                      dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN  
                      dbo.VLRequestRejectedReason on  VLRequestForm.Id = VLRequestRejectedReason.RejectedReasonId LEFT OUTER JOIN                 
                      dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
                      dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN                   
                      dbo.VLTestReason ON dbo.VLTestReason.Id = dbo.VLRequestForm.ReasonTest LEFT OUTER JOIN
                      dbo.SpecimenType ON dbo.SpecimenType.Id = dbo.VLRequestForm.SpecimenType LEFT OUTER JOIN                 
                      dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.LabInstrument ON dbo.VLSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID LEFT OUTER JOIN
                      dbo.AppUser As VLSpecimenResultUpdatedBy ON VLSpecimenResult.UpdatedById = VLSpecimenResultUpdatedBy.UserId LEFT OUTER JOIN
                      dbo.AppUser As VLSpecimenResultCreatedBy ON VLSpecimenResult.CreatedById = VLSpecimenResultCreatedBy.UserId 
           
           --From VLPatient Inner join
           --VLRequestForm on VLPatient.Id = VLRequestForm.PatientId Inner Join
           --VLRequestRejectedReason on  VLRequestForm.Id = VLRequestRejectedReason.RejectedReasonId inner join
           --VLSpecimen on VLRequestForm.Id = VLSpecimen.VLRequestId Inner Join
           --VLSpecimenResult on VLSpecimen.Id = VLSpecimenResult.VLSpecimenId Inner Join          
           --VLStatus on VLSpecimen.Id = VLStatus.VLSpecimenId Inner Join
           ----Province on VLRequestForm.ProvinceId = Province.Id Inner Join
           --Facility on VLRequestForm.FacilityId = Facility.Id Inner Join
           --LLG on Facility.LLGId = LLG.Id Inner Join
           --District on LLG.DistrictId = District.Id left Join
           ----FacilityType on Facility.FacilityTypeId = FacilityType.Id Inner Join
           --LabInstrument On VLSpecimenResult.LabInstrumentId = LabInstrument.ID Inner Join
           --SpecimenType On VLRequestForm.SpecimenType = SpecimenType.Id Inner Join
           --AppUser As VLSpecimenResultUpdatedBy ON VLSpecimenResult.UpdatedById = VLSpecimenResultUpdatedBy.UserId inner Join
           --AppUser As VLSpecimenResultCreatedBy ON VLSpecimenResult.CreatedById = VLSpecimenResultCreatedBy.UserId inner join
           --VLTestReason on VLRequestForm.ReasonTest=VLTestReason.Id
           --VLPatientTherapies On VLRequestForm.Id = VLPatientTherapies.RequestFormId          
           --Where VLStatus.Status = 'Printed' AND
           --VLStatus.Id Not IN (Select statusId from [dbo].[VLSummary]);
             Where VLSpecimen.Id in (@SpecimenId) and (VLPatient.ARTNumber <> '' or VLPatient.PatientCode <>'');
GO
/****** Object:  StoredProcedure [dbo].[PullVLData_22062018]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[PullVLData_22062018]
	
AS
DECLARE @RequestId INT
INSERT INTO [LIS].[dbo].[VLSummery]
           ([Fullname]
           ,[PatientCode]
           ,[ARTNumber]
           ,[Sex]
           ,[AppPatientId]
           ,[DateOfBirth]
           ,[ResidingRegionState]
           ,[ResidingGTownShip]
           ,[RegistrationNo]
           ,[BatchNumber]
           ,[SerialNo]
           ,[ProvinceName]
           ,[ProvinceCode]
           ,[DistrictName]
           ,[DistrictCode]
           ,[TownshipName]
           ,[TownshipCode]
           ,[FacilityName]
           ,[FacilityCode]
           ,[FacilityARTCode]
           ,[FacilityType2]
           ,[FacilityType3]
           ,[VLEmail]
           ,[FacilityType]
           ,[Age]
           ,[Age_Month]
           ,[ageinweeks]
           ,[ReasonTest]
           ,[ReasonfortestOther]
           ,[SpecimenType]
           ,[PreviousLabNumber]
           ,[NameOfNurseOrHEOCollectingDBS]
           ,[Adherence]
           ,[PrevVLcopiesml]
           ,[PrevVLLog]
           ,[Mostrecentviralload]
           ,[MostrecentviralloadLog]
           ,[Daterecentviralload]
           ,[BaselineCD4count]
           ,[MostrecentCD4count]
           ,[DateCD4Test]
           ,[Patientontherapy]
           ,[ARTStaringDate]
           ,[SecondLineARTStartingDate]
           ,[Patientevertherapy]
           ,[SampleStored]
           ,[Temperature]
           ,[Duration]
           ,[CurrentRegimen]
           ,[LabNumber]
           ,[RecievedDate]
           ,[SampleCollectedDate]
           ,[SampleShipmentDate]
           ,[specimencollectionTime]
           ,[RegistrationDate]
           ,[SpecimenQuality]
           ,[FinalReportResult]
           ,[FinalReportDate]
           ,[Copies_ml]
           ,[LogCopies]
           ,[LabInstrumentname]
           ,[MinVLcopiesDetection]
           ,[MinVLlogsDetection]
           ,[DBSMinVLcopiesDetection]
           ,[DBSMinVLlogsDetection]
           ,[MaxVLcopiesDetection]
           ,[MaxMinVLlogsDetection]
           ,[ResultApprovedBy]
           ,[TestedBy]
           ,[StatusId]
           ,[Status]
           ,[DateChanged]           
           ,[Treatment]
           ,[Drug]
           ,[Lab])
     Select
           VLPatient.Fullname
           ,VLPatient.PatientCode
           ,VLPatient.ARTNumber
           ,VLPatient.Sex
           ,VLPatient.AppPatientId
           ,VLPatient.DateOfBirth
           ,VLPatient.ResidingRegionState
           ,VLPatient.ResidingGTownShip
           ,VLRequestForm.RegistrationNo
           ,VLRequestForm.BatchNumber
           ,VLRequestForm.SerialNo
           ,Province.ProvinceName
           ,Province.ProvinceCode
           ,District.DistrictName
           ,District.DistrictCode
           ,LLG.LLGName
           ,LLG.LLGCode
           ,Facility.FacilityName
           ,Facility.FacilityCode
           ,Facility.FacilityARTCode
           ,Facility.FacilityType2
           ,Facility.FacilityType3
           ,Facility.VLEmail
           ,FacilityType.FacilityTypeName
           ,VLRequestForm.Age
           ,VLRequestForm.Age_Month
           ,VLRequestForm.ageinweeks
           ,VLTestReason.Reasonfortest
           ,VLRequestForm.ReasonfortestOther
           ,SpecimenType.SpecimenName
           ,VLRequestForm.PreviousLabNumber
           ,VLRequestForm.NameOfNurseOrHEOCollectingDBS
           ,VLRequestForm.Adherence
           ,VLRequestForm.PrevVLcopiesml
           ,VLRequestForm.PrevVLLog
           ,VLRequestForm.Mostrecentviralload
           ,VLRequestForm.MostrecentviralloadLog
           ,VLRequestForm.Daterecentviralload
           ,VLRequestForm.BaselineCD4count
           ,VLRequestForm.MostrecentCD4count
           ,VLRequestForm.DateCD4Test
           ,VLRequestForm.Patientontherapy
           ,VLRequestForm.ARTStaringDate
           ,VLRequestForm.SecondLineARTStartingDate
           ,VLRequestForm.Patientevertherapy
           ,VLRequestForm.SampleStored
           ,VLRequestForm.Temperature
           ,VLRequestForm.Duration
           ,VLRequestForm.CurrentRegimen
           ,VLSpecimen.LabNumber
           ,VLSpecimen.RecievedDate
           ,VLSpecimen.SampleCollectedDate
           ,VLSpecimen.SampleShipmentDate
           ,VLSpecimen.specimencollectionTime
           ,VLSpecimen.RegistrationDate
           ,VLSpecimen.SpecimenQuality
           ,VLSpecimenResult.FinalReportResult
           ,VLSpecimenResult.FinalReportDate
           ,VLSpecimenResult.Copies_ml
           ,VLSpecimenResult.LogCopies
           ,LabInstrument.LabInstrumentname
           ,LabInstrument.MinVLcopiesDetection
           ,LabInstrument.MinVLlogsDetection
           ,LabInstrument.DBSMinVLcopiesDetection
           ,LabInstrument.DBSMinVLlogsDetection
           ,LabInstrument.MaxVLcopiesDetection
           ,LabInstrument.MaxVLlogsDetection
            ,(VLSpecimenResultUpdatedBy.FirstName  + '' + VLSpecimenResultUpdatedBy.LastName) AS ResultApprovedBy
           ,VLSpecimenResult.TestedBy
           ,VLStatus.Id
           ,VLStatus.Status
           ,VLStatus.DateChanged
           ,(SELECT STUFF((SELECT '; ' + VLT.Treatment FROM VLPatientTherapies as VLT WHERE VLT.RequestFormId = RF.Id FOR XML PATH('')), 1, 1, '') FROM VLRequestForm as RF where RF.Id = VLRequestForm.Id )
           ,(SELECT STUFF((SELECT '; ' + ARVRegimen.ARVRegimenName FROM VLPatientTherapies as VLT Inner join ARVRegimen on VLT.Drug = ARVRegimen.ARVRegimenId WHERE VLT.RequestFormId = RF.Id FOR XML PATH('')), 1, 1, '') FROM VLRequestForm as RF where RF.Id = VLRequestForm.Id)
            --,VLPatientTherapies.Treatment
           ,(Select dbo.Laboratory.LaboratoryName from dbo.Laboratory)  as Lab
           From VLPatient Inner join
           VLRequestForm on VLPatient.Id = VLRequestForm.PatientId Inner Join
           VLSpecimen on VLRequestForm.Id = VLSpecimen.VLRequestId Inner Join
           VLSpecimenResult on VLSpecimen.Id = VLSpecimenResult.VLSpecimenId Inner Join
           VLStatus on VLSpecimen.Id = VLStatus.VLSpecimenId Inner Join
           Province on VLRequestForm.ProvinceId = Province.Id Inner Join
           District on District.ProvinceId = Province.Id Inner Join
           LLG on LLG.DistrictId = District.Id Inner Join
           Facility on VLRequestForm.FacilityId = Facility.Id Inner Join
           FacilityType on Facility.FacilityTypeId = FacilityType.Id Inner Join
           LabInstrument On VLSpecimenResult.LabInstrumentId = LabInstrument.ID Inner Join
           SpecimenType On VLRequestForm.SpecimenType = SpecimenType.Id Inner Join
           VLTestReason on VLTestReason.Id = VLRequestForm.ReasonTest Inner Join
           AppUser As VLSpecimenResultUpdatedBy ON VLSpecimenResult.UpdatedById = VLSpecimenResultUpdatedBy.UserId
           --VLPatientTherapies On VLRequestForm.Id = VLPatientTherapies.RequestFormId
          
           Where VLStatus.Status = 'Printed' AND
           VLStatus.Id Not IN (Select statusId from [dbo].[VLSummery]);
GO
/****** Object:  StoredProcedure [dbo].[UpdateEIDData]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[UpdateEIDData]

AS
Update LISSyncDB.dbo.[EIDSummary]
       set  [PatientCode]	=Patient.PatientCode
           ,[FirstName]	=Patient.FirstName
           ,[MiddleName]	=Patient.MiddleName
           ,[Surname]	=Patient.Surname
           ,[DateOfBirth]	=Patient.DateOfBirth
           ,[Sex]	=Patient.Sex
           ,[MorGFirstName]	=Patient.MorGFirstName
           ,[MorGMiddleName]	=Patient.MorGMiddleName
           ,[MorGSurname]	=Patient.MorGSurname
           ,[MorGTelNumber]	=Patient.MorGTelNumber          
           ,[MorGResidingRegionState]	=Patient.MorGResidingRegionState
           ,[MorGResidingGTownShip]	=patient.MorGResidingGTownShip
           ,[PatientType]	=Patient.PatientType
           ,[PMTCTCode]	=Patient.PMTCTCode
           ,[BatchNumber]	=RequestForm.BatchNumber
           ,[FacilityId]	=RequestForm.FacilityId           
           ,[Age]	=RequestForm.Age
           ,[ageinweeks]	=RequestForm.ageinweeks
           ,[ReasonTest]	=RequestForm.ReasonTest
           ,[SpecimenType]	=RequestForm.SpecimenType
           ,[PreviousLabNumber]	=RequestForm.PreviousLabNumber
           ,[NameOfNurseOrHEOCollectingDBS]	=RequestForm.NameOfNurseOrHEOCollectingDBS
           ,[MotherHIVStatus]	=RequestForm.MotherHIVStatus
           ,[FatherHIVStatus]	=RequestForm.FatherHIVStatus
           ,[ModeOfDelivery]	=RequestForm.ModeOfDelivery
           ,[MotherARVStatus]	=RequestForm.MotherARVStatus
           ,[IfARVStatusOnWeekStarted]	=RequestForm.IfARVStatusOnWeekStarted
           ,[DifficultBirth]	=RequestForm.DifficultBirth
           ,[VillageBirth]	=RequestForm.VillageBirth
           ,[MotherARVRegimen]	=RequestForm.MotherARVRegimen
           ,[TimingIfMotherARVRegimenOther]	=RequestForm.TimingIfMotherARVRegimenOther
           ,[InfantARVStatus]	=RequestForm.InfantARVStatus
           ,[TimingIfInfantARVSatusOther]	=RequestForm.TimingIfInfantARVSatusOther
           ,[ExclusiveBreastFeeding]	=RequestForm.ExclusiveBreastFeeding
           ,[ExclusiveReplacementFeeding]	=RequestForm.ExclusiveReplacementFeeding
           ,[IfReplacementYesAgeAtWean]	=RequestForm.IfReplacementYesAgeAtWean
           ,[MixedFeeding]	=RequestForm.MixedFeeding
           ,[BreastFeedingUnknown]	=RequestForm.BreastFeedingUnknown
           ,[Agewhenlastbreastfed]	=RequestForm.Agewhenlastbreastfed
           ,[AnyPriorHIVTestResult]	=RequestForm.AnyPriorHIVTestResult
           ,[PriorHIVTestResult]	=RequestForm.PriorHIVTestResult
           ,[PriorHIVTestDate]	=RequestForm.PriorHIVTestDate
           ,[PriorTestType]	=RequestForm.PriorTestType
           ,[RequestFormCreatedDate]	=RequestForm.DateCreated
           ,[RequestFormUpdatedDate]	=RequestForm.DateUpdated
           ,[LabNumber]	=Specimen.LabNumber
           ,[RecievedDate]	=Specimen.RecievedDate
           ,[SampleCollectedDate]	=Specimen.SampleCollectedDate
           ,[SampleShipmentDate]	=Specimen.SampleShipmentDate
           ,[RegistrationDate]	=Specimen.RegistrationDate
           ,[DBSSpecimenQuality]	=Specimen.DBSSpecimenQuality           
           ,[RejectedReasonId]	= RequestRejectedReason.RejectedReasonId
           ,[SpecimenCreatedDate]	=Specimen.DateCreated
           ,[SpecimenUpdateDate]	=Specimen.DateUpdated           
           ,[FirstTestDate]	=SpecimenResult.FirstTestDate
           ,[FirstTestResult]	=SpecimenResult.FirstTestResult
           ,[RepeatTest]	=SpecimenResult.RepeatTest
           ,[RepeatReason]	=SpecimenResult.RepeatReason
           ,[SecondTestResult]	=SpecimenResult.SecondTestResult
           ,[SecondTestDate]	=SpecimenResult.SecondTestDate
           ,[RepeatSecondTest]	=SpecimenResult.RepeatSecondTest
           ,[RepeatReasonSecondTest]	=SpecimenResult.RepeatReasonSecondTest
           ,[ThirdTestResult]	=SpecimenResult.ThirdTestResult
           ,[ThirdTestDate]	=SpecimenResult.ThirdTestDate
           ,[FinalReportResult]	=SpecimenResult.FinalReportResult
           ,[FinalReportDate]	=SpecimenResult.FinalReportDate
           ,[SecondDBSRequired]	=SpecimenResult.SecondDBSRequired
           ,[FirstTestAbsorbanceValue]	=SpecimenResult.FirstTestAbsorbanceValue
           ,[SecondTestAbsorbanceValue]	=SpecimenResult.SecondTestAbsorbanceValue
           ,[ThirdTestAbsorbanceValue]	=SpecimenResult.ThirdTestAbsorbanceValue
           ,[Comment]	=SpecimenResult.Comment
           ,[TestedBy]	=SpecimenResult.TestedBy           
           ,[ResultCreatedDate]	=SpecimenResult.DateCreated
           ,[ResultUpdatedDate] =SpecimenResult.DateUpdated
           ,[LabInstrumentname]  =LabInstrument.LabInstrumentname           
           ,[LabInstrumentId] =LabInstrument.ID
           ,[StatusId] =Status.Id
           ,[Status]  =Status.Status
           ,[DateChanged]=Status.DateChanged
           ,[Lab]  =(Select dbo.Laboratory.LaboratoryName from dbo.Laboratory) 
           ,[LabCode]=(Select dbo.Laboratory.LabCode from dbo.Laboratory) 
           ,[ResultApprovedBy]=(SpecimenResultUpdatedBy.FirstName  + '' + SpecimenResultUpdatedBy.LastName) 
           ,[RequestId]=RequestForm.Id   
           ,[SpecimenId]=Specimen.Id     
           ,[SpecimenResultId]=SpecimenResult.Id
            From Patient Inner join
           RequestForm on Patient.Id = RequestForm.PatientId Inner Join
           RequestRejectedReason on RequestForm.Id=RequestRejectedReason.RequestId Inner Join
           Specimen on RequestForm.Id = Specimen.RequestId Inner Join
           SpecimenResult on Specimen.Id = SpecimenResult.SpecimenId Inner Join
           Status on Specimen.Id = Status.SpecimenId Inner Join
           Province on RequestForm.ProvinceId = Province.Id Inner Join
           Facility on RequestForm.FacilityId = Facility.Id Inner Join
           LLG on Facility.LLGId = LLG.Id Inner Join
           District on LLG.DistrictId = District.Id left Join
           FacilityType on Facility.FacilityTypeId = FacilityType.Id Inner Join
           LabInstrument On SpecimenResult.LabInstrumentId = LabInstrument.ID Inner Join
           SpecimenType On RequestForm.SpecimenType = SpecimenType.Id  Inner Join
           AppUser As SpecimenResultUpdatedBy ON SpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId           
           Where Status.Status = 'Printed' AND           (
           --((EIDSummary.PatientUpdatedDate< Patient.DateUpdated )AND (Summery.PatientId = Patient.Id)) OR
           (( LISSyncDB.dbo.EIDSummary.RequestFormUpdatedDate< RequestForm.DateUpdated )AND (LISSyncDB.dbo.EIDSummary.RequestId = RequestForm.Id)) OR
          ((LISSyncDB.dbo.EIDSummary.SpecimenUpdateDate < Specimen.DateUpdated) AND (LISSyncDB.dbo.EIDSummary.SpecimenId=Specimen.Id))OR
          ((LISSyncDB.dbo.EIDSummary.ResultUpdatedDate< SpecimenResult.DateUpdated) AND (LISSyncDB.dbo.EIDSummary.SpecimenResultId=SpecimenResult.Id)))
GO
/****** Object:  StoredProcedure [dbo].[UpdateVLData]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[UpdateVLData]
@SpecimenId int        
AS
update LISSYNCDB.dbo.[VLSummary]
       set  [Fullname]=VLPatient.Fullname
           ,[PatientCode]=VLPatient.PatientCode
           ,[PatientType]=VLPatient.PatientType
           ,[ARTNumber]=VLPatient.ARTNumber
           ,[Sex]=VLPatient.Sex
           ,[DateOfBirth]=VLPatient.DateOfBirth
           ,[ResidingRegionState]=VLPatient.ResidingRegionState
           ,[ResidingGTownShip]=VLPatient.ResidingGTownShip
           ,[RegistrationNo]=VLRequestForm.RegistrationNo
           ,[BatchNumber]=VLRequestForm.BatchNumber
           ,[FacilitytId]=Facility.Id
           ,[Age]=VLRequestForm.Age
           ,[Age_Month]=VLRequestForm.Age_Month
           ,[CurrentRegimen]=VLRequestForm.CurrentRegimen
           ,[ARVRegimen]=VLRequestForm.ARVRegimenName
           ,[ageinweeks]=VLRequestForm.ageinweeks
           ,[ReasonTestId]=VLTestReason.Id
           ,[ReasonfortestOther]=VLRequestForm.ReasonfortestOther
           ,[SpecimenTypeId]=SpecimenType.Id
           ,[PreviousLabNumber]=VLRequestForm.PreviousLabNumber
           ,[NameOfNurseOrHEOCollectingDBS]=VLRequestForm.NameOfNurseOrHEOCollectingDBS
           ,[Adherence]=VLRequestForm.Adherence
           ,[PrevVLcopiesml]=VLRequestForm.PrevVLcopiesml
           ,[PrevVLLog]=VLRequestForm.PrevVLLog
           ,[Mostrecentviralload]=VLRequestForm.Mostrecentviralload
           ,[MostrecentviralloadLog]=VLRequestForm.MostrecentviralloadLog
           ,[Mostrecentviralloadresult]=VLRequestForm.Mostrecentviralloadresult
           ,[Daterecentviralload]=VLRequestForm.Daterecentviralload
           ,[BaselineCD4count]=VLRequestForm.BaselineCD4count
           ,[MostrecentCD4count]=VLRequestForm.MostrecentCD4count
           ,[DateCD4Test]=VLRequestForm.DateCD4Test
           ,[Patientontherapy]=VLRequestForm.Patientontherapy
           ,[ARTStaringDate]=VLRequestForm.ARTStaringDate
           ,[SecondLineARTStartingDate]=VLRequestForm.SecondLineARTStartingDate
           ,[Patientevertherapy]=VLRequestForm.Patientevertherapy
           ,[SampleStored]=VLRequestForm.SampleStored
           ,[Temperature]=VLRequestForm.Temperature
           ,[Duration]=VLRequestForm.Duration
           ,[RequestCreatedDate]=VLRequestForm.Datecreated
           ,[RequestUpdatedDate]=VLRequestForm.Dateupdated
           ,[LabNumber]=VLSpecimen.LabNumber
           ,[CreatedDate]= VLSpecimen.DateUpdated
           ,[RecievedDate]=VLSpecimen.RecievedDate
           ,[SampleCollectedDate]=VLSpecimen.SampleCollectedDate
           ,[SampleShipmentDate]=VLSpecimen.SampleShipmentDate
           ,[specimencollectionTime]=VLSpecimen.specimencollectionTime
           ,[RegistrationDate]=VLSpecimen.RegistrationDate
           ,[SpecimenQuality]=VLSpecimen.SpecimenQuality
           ,[RejectedReasonId]=VLRequestRejectedReason.Id
           ,[FinalReportResult]=VLSpecimenResult.FinalReportResult
           ,[FinalReportDate]=VLSpecimenResult.FinalReportDate
           ,[Comment]=VLSpecimenResult.Comment
           ,[Copies_ml]=VLSpecimenResult.Copies_ml
           ,[LogCopies]=VLSpecimenResult.LogCopies
           ,[ResultCreatedDate]=VLSpecimenResult.DateCreated
           ,[ResultUpdatedDate]=VLSpecimenResult.DateUpdated 
           ,[Reasonfortest]=VLTestReason.Reasonfortest  
           ,[LabInstrumentname]=LabInstrument.LabInstrumentname
           ,[LabInstrumentId]=LabInstrument.ID
           ,[ResultCreatedBy]=(VLSpecimenResultCreatedBy.FirstName  + '' + VLSpecimenResultCreatedBy.LastName) 
           ,[ResultApprovedBy]=(VLSpecimenResultUpdatedBy.FirstName  + '' + VLSpecimenResultUpdatedBy.LastName) 
           ,[TestedBy]=VLSpecimenResult.TestedBy
           ,[StatusId]=VLStatus.Id
           ,[Status]=VLStatus.Status
           ,[DateChanged]=VLStatus.DateChanged
           ,[Lab]=(Select dbo.Laboratory.LaboratoryName from dbo.Laboratory)  
           ,[LabCode]=(Select dbo.Laboratory.LabCode from dbo.Laboratory) 
           ,[Treatment]=(Select t.VLTTreatement from fnGetVLTreatement(VLRequestForm.Id)as t)
           ,[Drug]=(Select t.VLDrug from fnGetVLDrug(VLRequestForm.Id)as t)
           ,[RequestId]=VLRequestForm.Id  
           ,[SpecimenId]=VLSpecimen.Id   
           ,[SpecimenResultId]=VLSpecimenResult.Id
           ,[PatientId]=VLPatient.Id
          
          --From VLPatient Inner join
          -- VLRequestForm on VLPatient.Id = VLRequestForm.PatientId Inner Join
          -- VLRequestRejectedReason on  VLRequestForm.Id = VLRequestRejectedReason.RejectedReasonId inner join
          -- VLSpecimen on VLRequestForm.Id = VLSpecimen.VLRequestId Inner Join
          -- VLSpecimenResult on VLSpecimen.Id = VLSpecimenResult.VLSpecimenId Inner Join
          -- VLStatus on VLSpecimen.Id = VLStatus.VLSpecimenId Inner Join
          -- Province on VLRequestForm.ProvinceId = Province.Id Inner Join
          -- Facility on VLRequestForm.FacilityId = Facility.Id Inner Join
          -- LLG on Facility.LLGId = LLG.Id Inner Join
          -- District on LLG.DistrictId = District.Id left Join
          -- FacilityType on Facility.FacilityTypeId = FacilityType.Id Inner Join
          -- LabInstrument On VLSpecimenResult.LabInstrumentId = LabInstrument.ID Inner Join
          -- SpecimenType On VLRequestForm.SpecimenType = SpecimenType.Id Inner Join
          -- AppUser As VLSpecimenResultUpdatedBy ON VLSpecimenResult.UpdatedById = VLSpecimenResultUpdatedBy.UserId inner Join
          -- AppUser As VLSpecimenResultCreatedBy ON VLSpecimenResult.CreatedById = VLSpecimenResultCreatedBy.UserId inner join
          -- VLTestReason on VLRequestForm.ReasonTest=VLTestReason.Id
           
          -- Where VLStatus.Status = 'Printed' AND 
          -- (((LISSyncDB.dbo.VLSummary.RequestUpdatedDate< VLRequestForm.DateUpdated )
          -- AND (LISSyncDB.dbo.VLSummary.RequestId = VLRequestForm.Id)) OR
          --((LISSyncDB.dbo.VLSummary.CreatedDate< VLSpecimen.DateUpdated) 
          --AND (LISSyncDB.dbo.VLSummary.SpecimenId=@SpecimenId))OR
          --((LISSyncDB.dbo.VLSummary.ResultUpdatedDate< VLSpecimenResult.DateUpdated) 
          --AND (LISSyncDB.dbo.VLSummary.SpecimenResultId=VLSpecimenResult.Id)))
          
          from  dbo.VLSpecimen LEFT OUTER JOIN
                      dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN  
                      dbo.VLRequestRejectedReason on  VLRequestForm.Id = VLRequestRejectedReason.RejectedReasonId LEFT OUTER JOIN                 
                      dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
                      dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN                   
                      dbo.VLTestReason ON dbo.VLTestReason.Id = dbo.VLRequestForm.ReasonTest LEFT OUTER JOIN
                      dbo.SpecimenType ON dbo.SpecimenType.Id = dbo.VLRequestForm.SpecimenType LEFT OUTER JOIN                 
                      dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.LabInstrument ON dbo.VLSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID LEFT OUTER JOIN
                      dbo.AppUser As VLSpecimenResultUpdatedBy ON VLSpecimenResult.UpdatedById = VLSpecimenResultUpdatedBy.UserId LEFT OUTER JOIN
                      dbo.AppUser As VLSpecimenResultCreatedBy ON VLSpecimenResult.CreatedById = VLSpecimenResultCreatedBy.UserId 
                      
          Where LISSyncDB.dbo.VLSummary.SpecimenId=@SpecimenId and VLPatient.ARTNumber <> '';
GO
/****** Object:  StoredProcedure [dbo].[ViralLoadDispatchResult]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ViralLoadDispatchResult]
@parameters varchar(max)
AS
declare @query varchar(max)
declare @param varchar(max)
declare @ch Char = '<'
declare @copyval varchar(max) = '250'
declare @logval nvarchar(max) = '2.4'
set @param = @parameters
 set @query = ' SELECT VLPatient.FullName, ' +
                '  VLRequestForm.Age,   ' +
                '  VLPatient.Sex,   ' +
                ' VLPatient.PatientCode ' +
                '  PA.ProvinceName as Residing_Province ,   ' +
                '  PF.FacilityName as Residing_Township_Hospital,   ' +                
                '  Facility.FacilityName,    ' +
                ' FacilityType.FacilityTypeName, ' +
                '  Facility.FacilityCode,  ' +
                '  Facility.SMSPhoneNumber,  ' +
                 ' Province.ProvinceName,  ' +
                 ' Province.ProvinceCode,  ' +
                 ' Facility.Email,   ' +
                 ' VLRequestForm.RegistrationNo,   ' +
                 ' VLRequestForm.BatchNumber,   ' +
                 ' VLTestReason.Reasonfortest,    ' +
                 ' VLRequestForm.PreviousLabNumber,  ' + 
                 ' VLRequestForm.NameOfNurseOrHEOCollectingDBS,  ' +   
                 ' SpecimenType.SpecimenName as SpecimenType ,    ' +               
                 ' RequestFormCreatedBy.DateCreated As RequestFormCreatedDate,   ' +
                 ' (RequestFormCreatedBy.FirstName   + '' '' +  RequestFormCreatedBy.LastName) As RequestFormCreatedBy,  ' +
                 ' VLSpecimen.LabNumber,    ' +
                 ' VLSpecimen.RecievedDate, ' +
                 ' VLSpecimen.SampleCollectedDate,    ' +
                 ' VLSpecimen.specimencollectionTime,    ' +
                 ' VLSpecimen.SampleShipmentDate,    ' +
                 ' VLSpecimen.RegistrationDate,    ' +
                 ' VLSpecimen.SpecimenQuality,   ' +
                 ' RejectedReason.Reason AS RejectedReason,   ' +
                 ' VLSpecimen.Id AS SpecimenId,  ' +
                 ' VLSpecimenResult.FinalReportResult,  ' +
                 ' VLSpecimenResult.FinalReportDate,  ' +
                 ' VLSpecimenResult.DateCreated AS DateCreatedSpecimenResult,  ' +
                 ' VLSpecimenResult.DateUpdated AS DateUpdatedSpecimenResult,  ' +
                 --' VLSpecimenResult.SecondDBSRequired ,  ' +
                 '  (SpecimenResultCreatedBy.FirstName   + '' '' +  SpecimenResultCreatedBy.LastName) AS SpecimenResultCreatedBy,   ' + 
                 '   (SpecimenResultUpdatedBy.FirstName  + '' '' + SpecimenResultUpdatedBy.LastName) AS ResultApprovedBy,    ' +
                 '  VLSpecimenResult.Id AS SpecimenResultId,   ' +
                 '  VLSpecimenResult.Copies_ml  AS Copies_ml   , '+
                 '  VLSpecimenResult.LogCopies AS LogCopies , '+
                  ' LabInstrument.LabInstrumentname, ' +
                 ' VLSpecimenResult.TestedBy ' +
             ' FROM VLSpecimen left JOIN   ' +
                '    VLRequestForm ON VLRequestForm.Id = VLSpecimen.VLRequestId left JOIN   ' +
                ' VLRequestRejectedReason ON VLRequestForm.Id = VLRequestRejectedReason.VLRequestId left JOIN ' +
                ' RejectedReason ON VLRequestRejectedReason.RejectedReasonId = RejectedReason.Id left JOIN ' +
                '   VLPatient ON VLRequestForm.PatientId = VLPatient.Id left JOIN   ' +
                '   Facility ON VLRequestForm.FacilityId = Facility.Id left JOIN   ' +
                '   FacilityType ON VLRequestForm.WardId = FacilityType.Id Left Join ' +
                '    AppUser As RequestFormCreatedBy ON VLRequestForm.CreatedBy = RequestFormCreatedBy.UserId left join   ' +
                '   Province ON Province.Id = VLRequestForm.ProvinceId left join   ' +
                '   Province PA ON PA.Id = VLPatient.ResidingRegionState left join   ' +
                '   VLTestReason ON VLTestReason.Id = VLRequestForm.ReasonTest left join ' +
                '   SpecimenType  ON SpecimenType.Id = VLRequestForm.SpecimenType left join   ' +
                '   Facility PF ON PF.Id = VLPatient.ResidingGTownShip left join   ' +
                '   VLStatus ON VLStatus.VLSpecimenId = VLSpecimen.Id left join   ' +
                '   VLSpecimenResult ON VLSpecimenResult.VLSpecimenId = VLSpecimen.Id left join  ' +
                '   AppUser As SpecimenResultCreatedBy ON VLSpecimenResult.CreatedById = SpecimenResultCreatedBy.UserId left join  ' +
                '   AppUser As SpecimenResultUpdatedBy ON VLSpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId  left join  ' +
                '   LabInstrument ON VLSpecimenResult.LabInstrumentId = LabInstrument.Id   ' +
                ' where '
         EXECUTE(@query + @param)
GO
/****** Object:  StoredProcedure [dbo].[ViralloadPatientHistory]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ViralloadPatientHistory]
	@ARTNumber nvarchar(100) = '',
	@PatientCode nvarchar(100) = ''
AS
SELECT VLPatient.PatientCode as PatientCode, VLSpecimen.LabNumber as LabNumber , VLSpecimenResult.FinalReportDate as TestDate, VLSpecimenResult.FinalReportResult as Result,VLSpecimenResult.Copies_ml as Copies_ml , VLSpecimenResult.LogCopies as LogCopies,LabInstrument.LabInstrumentname as Instrument
                          FROM dbo.VLRequestForm LEFT OUTER JOIN 
                          dbo.VLPatient on dbo.VLPatient.Id = dbo.VLRequestForm.PatientId Inner Join
                          dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId Inner  JOIN 
                          dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId Inner  JOIN
                          dbo.VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId left Join
                          LabInstrument on dbo.LabInstrument.Id = dbo.VLSpecimenResult.LabInstrumentId  
                      Where   -- VLPatient.PatientCode = @PatientCode
                        1 = Case when @ARTNumber = '' Then 1 When VLPatient.ARTNumber  = @ARTNumber Then 1 END and        
					    1 = Case when @PatientCode = '' Then 1 When VLPatient.PatientCode  = @PatientCode Then 1 END  
                      
--Union all

--Select ViralloadLegacy.PatientCode as PatientCode , ViralloadLegacy.LabNumber as LabNumber, ViralloadLegacy.TestDate as TestDate, ViralloadLegacy.Result as Result,ViralloadLegacy.Copies as Copies_ml , ViralloadLegacy.Logcopies as LogCopies, ViralloadLegacy.LabInstrumentused as Instrument

--From  ViralloadLegacy

--Where ViralloadLegacy.PatientCode = @PatientCode
GO
/****** Object:  StoredProcedure [dbo].[VLARTMonthly]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLARTMonthly]
	@Year int ,
	@Month int,
	@ReportShowing nvarchar(10)='',		
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' 
AS
Begin           
  
DECLARE @VLReport1 TABLE   (
							Age int,
							Age_month int,
							Sex nvarchar(10),
							ARTNumber nvarchar(100),
							FinalReportResult nvarchar(500),
							Copies_ml float,
							ARTStaringDate datetime,
							SampleCollectedDate datetime,
							DispatchedDate datetime,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))   
                            
DECLARE @VLLastDateReport1 TABLE 
							(
							Age int,
							Age_month int,
							Sex nvarchar(10),
							ARTNumber nvarchar(100),
							FinalReportResult nvarchar(500),
							Copies_ml float,
							ARTStaringDate datetime,
							SampleCollectedDate datetime,
							DispatchedDate datetime,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))  

------------------------------@ViewOption "Facility Name" ----------------------------

	
	if (@ReportShowing ='1') ---viral load test during this month
		begin
		INSERT @VLReport1 
		(Age,Age_month,Sex,ARTNumber,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
		select isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0), isnull(VLPatient.Sex,''), 
		VLPatient.ARTNumber,VLStatus.DateChanged,
		VLSpecimenResult.Copies_ml,VLRequestForm.ARTStaringDate,VLSpecimen.SampleCollectedDate,
		VLStatus.DateChanged,FacilityType.FacilityTypeName,
		Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
		FROM dbo.VLSpecimen LEFT OUTER JOIN
		dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
		dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
		dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
		dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id LEFT OUTER JOIN
		dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
		dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
		dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
		dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id 
		Where 
			1 = Case when @Year = '' and  @Month ='' Then 1 When 
			dbo.VLSpecimen.SampleCollectedDate >= DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)) and 
			dbo.VLSpecimen.SampleCollectedDate < DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)))+1,0))  Then 1 END
			and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
			and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
			and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
	end
	else if ((@ReportShowing ='2') or (@ReportShowing ='3'))---viral load test result during this month	and suppressed viral load (<1,000 copies/ml) among those who received the test result during this month
		begin
		INSERT @VLReport1 
		(Age,Age_month,Sex,ARTNumber,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
		select isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0), isnull(VLPatient.Sex,''), 
		VLPatient.ARTNumber,VLSpecimenResult.FinalReportResult,
		VLSpecimenResult.Copies_ml,VLRequestForm.ARTStaringDate,VLSpecimen.SampleCollectedDate,
		VLStatus.DateChanged,FacilityType.FacilityTypeName,
		Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
		FROM dbo.VLSpecimen LEFT OUTER JOIN
		dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
		dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
		dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
		dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id LEFT OUTER JOIN
		dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
		dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
		dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
		dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id 
		Where 
			1 = Case when @Year = '' and  @Month ='' Then 1 When 
			dbo.VLStatus.DateChanged >= DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)) and 
			dbo.VLStatus.DateChanged < DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)))+1,0)) Then 1 END
			and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
			and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
			and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
		end
    else if (@ReportShowing ='4') --viral load suppression (<1,000 copies/ml) at 12 months after ART initiation
		begin
		/***--Sample query for ART start date & end date -----
		declare @Year int=2018 ;
		declare @Month int=04;

		select  DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) as ARTstartdate,
		DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))+1,0)) as ARTenddate,
		DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) as lastyear_startdate,
		DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)) as lastyear_enddate,
		DATEADD(MONTH,-3,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) as samplecollectedstartdate,
		DATEADD(month,4,DATEADD(dd,-1,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)))) as samplecollectedenddate********/
		 
		 INSERT @VLReport1 
		 (Age,Age_month,Sex,ARTNumber,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
			select isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0), isnull(VLPatient.Sex,''), 
			VLPatient.ARTNumber,VLSpecimenResult.FinalReportResult,
			VLSpecimenResult.Copies_ml,VLRequestForm.ARTStaringDate,VLSpecimen.SampleCollectedDate,
			VLStatus.DateChanged,FacilityType.FacilityTypeName,
			Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
			FROM dbo.VLSpecimen LEFT OUTER JOIN
			dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
			dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
			dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
			dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id LEFT OUTER JOIN
			dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
			dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
			dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
			dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id 
			Where 
				1 = Case when @Year = '' and  @Month ='' Then 1 When 
				dbo.VLSpecimen.SampleCollectedDate >= DATEADD(MONTH,-3,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) and 
				dbo.VLSpecimen.SampleCollectedDate < DATEADD(month,4,DATEADD(dd,-1,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))
				and dbo.VLRequestForm.ARTStaringDate >= DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) 
				and dbo.VLRequestForm.ARTStaringDate < DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))+1,0)) Then 1 END 
				and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
				and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
				and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
			end
	 else if (@ReportShowing ='5')--viral load suppression (<1,000 copies/ml) at 12 months after ART initiation
		begin
		/***--Sample query for ART start date & end date -----
		declare @Year int=2018 ;
		declare @Month int=04;

		select  DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) as ARTstartdate,
		DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))+1,0)) as ARTenddate,
		DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) as lastyear_startdate,
		DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)) as lastyear_enddate,
		DATEADD(MONTH,-3,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) as samplecollectedstartdate,
		DATEADD(month,4,DATEADD(dd,-1,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)))) as samplecollectedenddate********/
		 
		 INSERT @VLReport1 
		 (Age,Age_month,Sex,ARTNumber,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
			select isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0), isnull(VLPatient.Sex,''), 
			VLPatient.ARTNumber,VLSpecimenResult.FinalReportResult,
			VLSpecimenResult.Copies_ml,VLRequestForm.ARTStaringDate,VLSpecimen.SampleCollectedDate,
			VLStatus.DateChanged,FacilityType.FacilityTypeName,
			Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
			FROM dbo.VLSpecimen LEFT OUTER JOIN
			dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
			dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
			dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
			dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id LEFT OUTER JOIN
			dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
			dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
			dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
			dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id 
			Where 
				1 = Case when @Year = '' and  @Month ='' Then 1 When 
				dbo.VLSpecimen.SampleCollectedDate >= DATEADD(MONTH,-3,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) and 
				dbo.VLSpecimen.SampleCollectedDate < DATEADD(month,4,DATEADD(dd,-1,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))
				and dbo.VLRequestForm.ARTStaringDate >= DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) 
				and dbo.VLRequestForm.ARTStaringDate < DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))+1,0)) Then 1 END 
				and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
				and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
				and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
				and (VLSpecimenResult.FinalReportResult != 'Rejected' and  VLStatus.Status != 'RecivedFromFacility') 
			end
			
	INSERT @VLLastDateReport1 
	(ARTNumber,Age,Age_Month,Sex,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
select t.ARTNumber,t.Age,t.Age_month, t.Sex,t.FinalReportResult,t.Copies_ml,t.ARTStaringDate,t.SampleCollectedDate,t.DispatchedDate,t.FacilityTypeName,t.ProvinceName,t.FacilityName,t.LaboratoryName
from @VLReport1 t

--t inner join 
--( select ARTNumber,max(DispatchedDate) as MaxFinalReportDate
--    from @VLReport1 
--    group by ARTNumber
--) tm on t.ARTNumber = tm.ARTNumber and t.DispatchedDate = tm.MaxFinalReportDate

	if (@ReportShowing ='1' or @ReportShowing ='2' or @ReportShowing ='5')
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,		
		(COUNT(CASE WHEN (Age =0 and Age_Month = 0) OR (Sex='') THEN 1 END)) As Nodata , 
		(COUNT(CASE WHEN Age >0 and Age <= 14 and Sex ='M' THEN 1 END)) As Yrs0_14M , 
		(COUNT(CASE WHEN Age >= 15 and Sex='M' THEN 1 END)) As Yrs15M , 
		(COUNT(CASE WHEN Age >0 and Age <= 14 and Sex ='F' THEN 1 END)) As Yrs0_14F , 
		(COUNT(CASE WHEN Age >= 15 and Sex='F' THEN 1 END)) As Yrs15F , 
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
		
		select * from @VLLastDateReport1	
		
	end 

else if (@ReportShowing ='3' or @ReportShowing ='4')
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN (Age =0 and Age_Month = 0) OR (Sex='') THEN 1 END)) As Nodata , 
		(COUNT(CASE WHEN Age >0 and Age <= 14 and Sex ='M' THEN 1 END)) As Yrs0_14M , 
		(COUNT(CASE WHEN Age >= 15 and Sex='M' THEN 1 END)) As Yrs15M , 
		(COUNT(CASE WHEN Age >0 and Age <= 14 and Sex ='F' THEN 1 END)) As Yrs0_14F , 
		(COUNT(CASE WHEN Age >= 15 and Sex='F' THEN 1 END)) As Yrs15F , 
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult = 'Detected' and  Copies_ml <= 1000)
		or (FinalReportResult = 'Below Minimum Detectable Level') or (FinalReportResult = 'Not Detected')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName	
		
		select * from @VLLastDateReport1
		Where (FinalReportResult = 'Detected' and  Copies_ml <= 1000)
		or (FinalReportResult = 'Below Minimum Detectable Level') or (FinalReportResult = 'Not Detected')
		
	end 

end
GO
/****** Object:  StoredProcedure [dbo].[VLARTMonthlyByIndicator]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLARTMonthlyByIndicator]
	@Year int ,
	@Month int,
		
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' 
AS
Begin           
  
DECLARE @VLReport1 TABLE   (
						    IndicatorName nvarchar(500),
							Age int,
							Age_month int,
							Sex nvarchar(10),
							ARTNumber nvarchar(100),
							FinalReportResult nvarchar(500),
							Copies_ml float,
							ARTStaringDate datetime,
							SampleCollectedDate datetime,
							DispatchedDate datetime,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))   
                            
DECLARE @VLReport2 TABLE (
							IndicatorName nvarchar(500),
							No_Patient int,
							Nodata int,
							Yrs0_14M int,
							Yrs15M int,
							Yrs0_14F int,
							Yrs15F int,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50)) 
 
 DECLARE @VLReportAll TABLE (
							IndicatorName nvarchar(500),
							No_Patient int,
							Nodata int,
							Yrs0_14M int,
							Yrs15M int,
							Yrs0_14F int,
							Yrs15F int,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))                                                        

DECLARE  @VLFacility  TABLE(FacilityName nvarchar(100))
  

		--1. No. of Patient on ART who received viral load test during this month
		INSERT @VLReport1 
		(IndicatorName,Age,Age_month,Sex,ARTNumber,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
		select '1',isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0), isnull(VLPatient.Sex,''), 
		VLPatient.ARTNumber,VLStatus.DateChanged,
		VLSpecimenResult.Copies_ml,VLRequestForm.ARTStaringDate,VLSpecimen.SampleCollectedDate,
		VLStatus.DateChanged,FacilityType.FacilityTypeName,
		Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
		FROM dbo.VLSpecimen LEFT OUTER JOIN
		dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
		dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
		dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
		dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id LEFT OUTER JOIN
		dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
		dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
		dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
		dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id 
		Where 
			1 = Case when @Year = '' and  @Month ='' Then 1 When 
			dbo.VLSpecimen.SampleCollectedDate >= DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)) and 
			dbo.VLSpecimen.SampleCollectedDate < DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)))+1,0))  Then 1 END
			and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
			and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
			and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
	
	--2.No. of Patient on ART who received viral load test result during this month			
	INSERT @VLReport1 
		(IndicatorName,Age,Age_month,Sex,ARTNumber,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
		select '2',isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0), isnull(VLPatient.Sex,''), 
		VLPatient.ARTNumber,VLSpecimenResult.FinalReportResult,
		VLSpecimenResult.Copies_ml,VLRequestForm.ARTStaringDate,VLSpecimen.SampleCollectedDate,
		VLStatus.DateChanged,FacilityType.FacilityTypeName,
		Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
		FROM dbo.VLSpecimen LEFT OUTER JOIN
		dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
		dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
		dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
		dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id LEFT OUTER JOIN
		dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
		dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
		dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
		dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id 
		Where 
			1 = Case when @Year = '' and  @Month ='' Then 1 When 
			dbo.VLStatus.DateChanged >= DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)) and 
			dbo.VLStatus.DateChanged < DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)))+1,0)) Then 1 END
			and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
			and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
			and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
			and ((VLSpecimenResult.FinalReportResult = 'Detected') or (VLSpecimenResult.FinalReportResult = 'Below Minimum Detectable Level') 
			or (VLSpecimenResult.FinalReportResult = 'Not Detected') or (VLSpecimenResult.FinalReportResult = 'Above Upper Limit of Quantification'))
	
	--3.No. of Patient on ART with suppressed viral load (<1,000 copies/ml) among those who received the test result during this month			
	INSERT @VLReport1 
		(IndicatorName,Age,Age_month,Sex,ARTNumber,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
		select '3',isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0), isnull(VLPatient.Sex,''), 
		VLPatient.ARTNumber,VLSpecimenResult.FinalReportResult,
		VLSpecimenResult.Copies_ml,VLRequestForm.ARTStaringDate,VLSpecimen.SampleCollectedDate,
		VLStatus.DateChanged,FacilityType.FacilityTypeName,
		Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
		FROM dbo.VLSpecimen LEFT OUTER JOIN
		dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
		dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
		dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
		dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id LEFT OUTER JOIN
		dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
		dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
		dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
		dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id 
		Where 
			1 = Case when @Year = '' and  @Month ='' Then 1 When 
			dbo.VLStatus.DateChanged >= DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)) and 
			dbo.VLStatus.DateChanged < DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)))+1,0)) Then 1 END
			and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
			and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
			and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
			and ((VLSpecimenResult.FinalReportResult = 'Detected' and  VLSpecimenResult.Copies_ml <= 1000)
		    or (VLSpecimenResult.FinalReportResult = 'Below Minimum Detectable Level') or (VLSpecimenResult.FinalReportResult = 'Not Detected'))
				
	--4.No. of people living with HIV on ART with viral load suppression (<1,000 copies/ml) at 12 months after ART initiation				
	/***--Sample query for ART start date & end date -----
		declare @Year int=2018 ;
		declare @Month int=04;

		select  DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) as ARTstartdate,
		DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))+1,0)) as ARTenddate,
		DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) as lastyear_startdate,
		DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)) as lastyear_enddate,
		DATEADD(MONTH,-3,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) as samplecollectedstartdate,
		DATEADD(month,4,DATEADD(dd,-1,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0)))) as samplecollectedenddate********/
		 
		 INSERT @VLReport1 
		 (IndicatorName,Age,Age_month,Sex,ARTNumber,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
			select '4',isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0), isnull(VLPatient.Sex,''), 
			VLPatient.ARTNumber,VLSpecimenResult.FinalReportResult,
			VLSpecimenResult.Copies_ml,VLRequestForm.ARTStaringDate,VLSpecimen.SampleCollectedDate,
			VLStatus.DateChanged,FacilityType.FacilityTypeName,
			Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
			FROM dbo.VLSpecimen LEFT OUTER JOIN
			dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
			dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
			dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
			dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id LEFT OUTER JOIN
			dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
			dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
			dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
			dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id 
			Where 
				1 = Case when @Year = '' and  @Month ='' Then 1 When 
				dbo.VLSpecimen.SampleCollectedDate >= DATEADD(MONTH,-3,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) and 
				dbo.VLSpecimen.SampleCollectedDate < DATEADD(month,4,DATEADD(dd,-1,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))
				and dbo.VLRequestForm.ARTStaringDate >= DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) 
				and dbo.VLRequestForm.ARTStaringDate < DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))+1,0)) Then 1 END 
				and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
				and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
				and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
				and ((VLSpecimenResult.FinalReportResult = 'Detected' and  VLSpecimenResult.Copies_ml <= 1000)
		    or (VLSpecimenResult.FinalReportResult = 'Below Minimum Detectable Level') or (VLSpecimenResult.FinalReportResult = 'Not Detected'))
	
	--5.No. of people living with HIV on ART at 12 months after ART initiation
	INSERT @VLReport1 
		 (IndicatorName,Age,Age_month,Sex,ARTNumber,FinalReportResult,Copies_ml,ARTStaringDate,SampleCollectedDate,DispatchedDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
			select '5',isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0), isnull(VLPatient.Sex,''), 
			VLPatient.ARTNumber,VLSpecimenResult.FinalReportResult,
			VLSpecimenResult.Copies_ml,VLRequestForm.ARTStaringDate,VLSpecimen.SampleCollectedDate,
			VLStatus.DateChanged,FacilityType.FacilityTypeName,
			Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
			FROM dbo.VLSpecimen LEFT OUTER JOIN
			dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
			dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
			dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
			dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id LEFT OUTER JOIN
			dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
			dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
			dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
			dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id 
			Where 
				1 = Case when @Year = '' and  @Month ='' Then 1 When 
				dbo.VLSpecimen.SampleCollectedDate >= DATEADD(MONTH,-3,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) and 
				dbo.VLSpecimen.SampleCollectedDate < DATEADD(month,4,DATEADD(dd,-1,DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))
				and dbo.VLRequestForm.ARTStaringDate >= DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))) 
				and dbo.VLRequestForm.ARTStaringDate < DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,DATEADD(year,- 1,  DATEADD(month,@Month-1,DATEADD(year,@Year-1900,0))))+1,0)) Then 1 END 
				and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
				and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
				and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
				and ((VLSpecimenResult.FinalReportResult = 'Detected') or (VLSpecimenResult.FinalReportResult = 'Below Minimum Detectable Level') 
				or (VLSpecimenResult.FinalReportResult = 'Not Detected') or (VLSpecimenResult.FinalReportResult = 'Above Upper Limit of Quantification'))
				
				
	
	--- Get Facility		
	INSERT @VLFacility (FacilityName)                                      
	SELECT  FacilityName
	FROM @VLReport1 Group by FacilityName
	
	INSERT @VLReportAll (IndicatorName,FacilityName)                                      
	SELECT  '1',FacilityName
	FROM @VLFacility 
	
	INSERT @VLReportAll(IndicatorName,FacilityName)                                      
	SELECT  '2',FacilityName
	FROM @VLFacility 
	
	INSERT @VLReportAll (IndicatorName,FacilityName)                                      
	SELECT  '3',FacilityName
	FROM @VLFacility 
	
	INSERT @VLReportAll (IndicatorName,FacilityName)                                      
	SELECT  '4',FacilityName
	FROM @VLFacility 
	
	INSERT @VLReportAll (IndicatorName,FacilityName)                                      
	SELECT  '5',FacilityName
	FROM @VLFacility
	
	--Prepare Data
	--1)
	INSERT @VLReport2 (IndicatorName,No_Patient,Nodata,Yrs0_14M,Yrs15M,Yrs0_14F,Yrs15F,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)                                      
	  SELECT IndicatorName,COUNT(ARTNumber) As No_Patient,		
		isnull((COUNT(CASE WHEN (Age =0 and Age_Month = 0) OR (Sex='') THEN 1 END)),0) As Nodata , 
		isnull((COUNT(CASE WHEN Age >0 and Age <= 14 and Sex ='M' THEN 1 END)),0) As Yrs0_14M , 
		isnull((COUNT(CASE WHEN Age >= 15 and Sex='M' THEN 1 END)),0) As Yrs15M , 
		isnull((COUNT(CASE WHEN Age >0 and Age <= 14 and Sex ='F' THEN 1 END)),0) As Yrs0_14F , 
		isnull((COUNT(CASE WHEN Age >= 15 and Sex='F' THEN 1 END)),0) As Yrs15F , 
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLReport1
		Group by FacilityTypeName,ProvinceName,FacilityName,IndicatorName,LaboratoryName
			
	UPDATE
    @VLReportAll
	SET
		No_Patient=vl.No_Patient,
		Nodata=vl.Nodata,
		Yrs0_14M=vl.Yrs0_14M,
		Yrs15M=vl.Yrs15M,
		Yrs0_14F=vl.Yrs0_14F,
		Yrs15F=vl.Yrs15F,
		FacilityTypeName=vl.FacilityTypeName,
		ProvinceName=vl.ProvinceName,
		LaboratoryName=vl.LaboratoryName
	FROM
		@VLReport2 AS vl
		INNER JOIN @VLReportAll AS vlall
			ON vl.FacilityName = vlall.FacilityName and vl.IndicatorName = vlall.IndicatorName
	
	UPDATE @VLReportAll SET IndicatorName='No. of Patient on ART who received viral load test during this month' where IndicatorName='1'	
	UPDATE @VLReportAll SET IndicatorName='No. of Patient on ART who received viral load test result during this month' where IndicatorName='2'	
	UPDATE @VLReportAll SET IndicatorName='No. of Patient on ART with suppressed viral load (<1,000 copies/ml) among those who received the test result during this month' where IndicatorName='3'	
	UPDATE @VLReportAll SET IndicatorName='No. of people living with HIV on ART with viral load suppression (<1,000 copies/ml) at 12 months after ART initiation' where IndicatorName='4'	
	UPDATE @VLReportAll SET IndicatorName='No. of Patient on ART who received viral load test result at 12 months after ART initiation during this month' where IndicatorName='5'	
		
	select IndicatorName,isnull(No_Patient,0) As No_Patient,isnull(Nodata,0) As Nodata,isnull(Yrs0_14M,0) As Yrs0_14M,isnull(Yrs15M,0) as Yrs15M,isnull(Yrs0_14F,0) as Yrs0_14F,isnull(Yrs15F,0) as Yrs15F,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName from @VLReportAll
	
	select * from @VLReport1
	
end
GO
/****** Object:  StoredProcedure [dbo].[VLGetAllListforDetail]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLGetAllListforDetail]
	@SpecimenId nvarchar(500)=''
	
AS
SELECT				dbo.VLPatient.SurName +' '+VLPatient.Fullname, dbo.VLPatient.Sex, dbo.VLPatient.PatientCode, dbo.VLPatient.ARTNumber, dbo.VLRequestForm.CurrentRegimen, dbo.Province.ProvinceName, dbo.Facility.FacilityName, 
                      dbo.Facility.VLSMSNumber, dbo.Facility.VLEmail, dbo.FacilityType.FacilityTypeName, dbo.LLG.LLGName AS Township, dbo.VLRequestForm.Age,dbo.VLRequestForm.Age_Month, dbo.VLTestReason.Reasonfortest, 
                      dbo.SpecimenType.SpecimenName, dbo.VLRequestForm.RegistrationNo, dbo.VLRequestForm.BatchNumber, dbo.VLRequestForm.ReasonTest, dbo.VLRequestForm.PreviousLabNumber, 
                      dbo.VLRequestForm.SpecimenType, dbo.VLRequestForm.Adherence, dbo.VLRequestForm.PrevVLcopiesml, dbo.VLRequestForm.Mostrecentviralload, dbo.VLRequestForm.MostrecentviralloadLog, 
                      dbo.VLRequestForm.BaselineCD4count, dbo.VLRequestForm.MostrecentCD4count, dbo.VLRequestForm.DateCD4Test, dbo.VLRequestForm.Daterecentviralload, 
                      dbo.VLRequestForm.Patientontherapy, dbo.VLRequestForm.Patientevertherapy, dbo.VLRequestForm.PrevVLLog, dbo.VLRequestForm.ARTStaringDate, dbo.VLRequestForm.SampleStored, 
                      dbo.VLRequestForm.NameOfNurseOrHEOCollectingDBS, dbo.VLSpecimen.LabNumber, dbo.VLSpecimen.specimencollectionTime, dbo.VLSpecimen.SampleCollectedDate, 
                      dbo.VLSpecimen.SampleShipmentDate, dbo.VLSpecimen.RegistrationDate, dbo.AppUser.FirstName + ' ' + dbo.AppUser.LastName AS UserEnteringData, dbo.VLSpecimen.SpecimenQuality, 
                      dbo.VLSpecimen.RejectedReason, dbo.VLSpecimen.Id AS VLSpecimenId, dbo.VLSpecimenResult.LabInstrumentId, dbo.VLSpecimenResult.TestedBy, dbo.VLSpecimenResult.Copies_ml, 
                      dbo.VLSpecimenResult.LogCopies, dbo.VLSpecimenResult.DateCreated AS DateCreatedSpecimenResult, dbo.VLSpecimenResult.DateUpdated AS DateUpdatedSpecimenResult, 
                      dbo.VLSpecimenResult.UpdatedById AS UpdatedByIdSpecimenResult, dbo.VLSpecimenResult.CreatedById AS CreatedByIdSpecimenResult, 
                      SpecimenResultUpdatedBy.FirstName + ' ' + SpecimenResultUpdatedBy.LastName AS ResultApprovedBy, dbo.VLSpecimenResult.Id AS SpecimenResultId, 
                      dbo.VLSpecimenResult.FinalReportResult, dbo.VLSpecimenResult.FinalReportDate, dbo.VLSpecimenResult.Comment, dbo.VLStatus.Status, dbo.LabInstrument.LabInstrumentname,
                      dbo.VLRequestForm.ARVRegimenName,dbo.VLPatient.PatientType, (select LabManagerSign from Laboratory) as logo
FROM         dbo.VLSpecimen LEFT OUTER JOIN
                      dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
                      dbo.FacilityType ON dbo.VLRequestForm.WardId = dbo.FacilityType.Id LEFT OUTER JOIN
                      dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
                      dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
                      dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
                      dbo.VLTestReason ON dbo.VLTestReason.Id = dbo.VLRequestForm.ReasonTest LEFT OUTER JOIN
                      dbo.SpecimenType ON dbo.SpecimenType.Id = dbo.VLRequestForm.SpecimenType LEFT OUTER JOIN
                      dbo.AppUser ON dbo.VLSpecimen.UserEnteringData = dbo.AppUser.UserId LEFT OUTER JOIN
                      dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
                      dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.LabInstrument ON dbo.VLSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID LEFT OUTER JOIN
                      dbo.AppUser AS SpecimenResultUpdatedBy ON dbo.VLSpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId
                      Where  
                        --1 = Case when @SpecimenId = '' Then 1 When VLSpecimen.Id in (@SpecimenId) --Then 1 END 
                        charindex(',' + CAST(VLSpecimen.Id as nvarchar(20)) + ',', @SpecimenId) > 0
                        order by dbo.VLSpecimen.LabNumber asc
                        
                        
SELECT  AppUser.UserId AS UserId, AppUser.UserSign As UserSign From dbo.AppUser --Where UserSign is not null
GO
/****** Object:  StoredProcedure [dbo].[VLGetAllListforHistory]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLGetAllListforHistory]	
	@SpecimenId nvarchar(500)=''
AS
DECLARE  @ARTNumber nvarchar (20)='';
DECLARE  @PatientCode nvarchar(20)='';
DECLARE  @LabID int;

--Get Lab ID
set @Labid = (SELECT [Id] FROM [LIMSLite].[dbo].[Laboratory]);

--Get LabTrackingOption                                  
set @ARTNumber=(SELECT  TrackingCode FROM  LabTrackingOption WHERE  LaboratoryId = @LabID and TestType ='ViralLoad'
    and TrackingCode='ARTNumber') ;
  
set @PatientCode=(SELECT  TrackingCode FROM  LabTrackingOption WHERE  LaboratoryId = @LabID and TestType ='ViralLoad'
    and TrackingCode='PatientCode')  ;

--Create @VLSpecimen Temp table
     DECLARE  @VLSpecimen  TABLE( 
                                 PatientCode nvarchar(50), 
                                 ARTNumber   nvarchar(50), 
                                 SpecimenId int 
                                 ) 
                                 
 --Create @PatientHistory Temp table
     DECLARE  @PatientHistory  TABLE( 
                                 PatientCode nvarchar(50), 
                                 ARTNumber   nvarchar(50), 
                                 LabNumber nvarchar(50) ,
                                 TestDate datetime,
                                 Result  nvarchar(50),
                                 Copies_ml decimal(18, 2),
                                 LogCopies decimal(18, 2),
                                 Instrument nvarchar(50)
                                 )  
                      
    INSERT @VLSpecimen (PatientCode,ARTNumber,SpecimenId)                             
    SELECT  dbo.VLPatient.PatientCode, dbo.VLPatient.ARTNumber,VLSpecimen.Id AS SpecimenId FROM dbo.VLSpecimen LEFT OUTER JOIN   
	dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN                     
    dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
    dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
    dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
    dbo.LabInstrument ON dbo.VLSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID 
    Where charindex(',' + CAST(VLSpecimen.Id as nvarchar(20)) + ',', @SpecimenId) > 0 --and VLPatient.ARTNumber <> '' 
                        
--if  ('ARTNumber' =  @ARTNumber) 
--begin
--INSERT @PatientHistory (PatientCode,ARTNumber,LabNumber,TestDate,Result,Copies_ml,LogCopies,Instrument) 
--SELECT VLPatient.PatientCode as PatientCode,dbo.VLPatient.ARTNumber as ARTNumber, VLSpecimen.LabNumber as LabNumber , VLSpecimenResult.FinalReportDate as TestDate, 
--VLSpecimenResult.FinalReportResult as Result,VLSpecimenResult.Copies_ml as Copies_ml , VLSpecimenResult.LogCopies as LogCopies,LabInstrument.LabInstrumentname as Instrument
--                          FROM dbo.VLRequestForm LEFT OUTER JOIN 
--                          dbo.VLPatient on dbo.VLPatient.Id = dbo.VLRequestForm.PatientId Inner Join
--                          dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId Inner  JOIN 
--                          dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId Inner  JOIN
--                          dbo.VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId left Join
--                          LabInstrument on dbo.LabInstrument.Id = dbo.VLSpecimenResult.LabInstrumentId  
--                      Where    VLPatient.ARTNumber  in (select ARTNumber from @VLSpecimen)
--                      and VLPatient.ARTNumber <> ''
--end

--if  ('PatientCode' =  @PatientCode) 
--begin
--INSERT @PatientHistory (PatientCode,ARTNumber,LabNumber,TestDate,Result,Copies_ml,LogCopies,Instrument) 
--SELECT VLPatient.PatientCode as PatientCode, dbo.VLPatient.ARTNumber as ARTNumber,VLSpecimen.LabNumber as LabNumber , VLSpecimenResult.FinalReportDate as TestDate, 
--VLSpecimenResult.FinalReportResult as Result,VLSpecimenResult.Copies_ml as Copies_ml , VLSpecimenResult.LogCopies as LogCopies,LabInstrument.LabInstrumentname as Instrument
--                          FROM dbo.VLRequestForm LEFT OUTER JOIN 
--                          dbo.VLPatient on dbo.VLPatient.Id = dbo.VLRequestForm.PatientId Inner Join
--                          dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId Inner  JOIN 
--                          dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId Inner  JOIN
--                          dbo.VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId left Join
--                          LabInstrument on dbo.LabInstrument.Id = dbo.VLSpecimenResult.LabInstrumentId  
--                      Where   VLPatient.PatientCode  in (select PatientCode from @VLSpecimen) 
--                      and VLPatient.PatientCode <> ''
--end
         
DECLARE @MyCursor CURSOR;
DECLARE	@VLPatientCode nvarchar(100) = '';
DECLARE	@VLARTNumber nvarchar(100) = '';
DECLARE	@VLSpecimenId int;

BEGIN
    SET @MyCursor = CURSOR FOR
    select PatientCode,ARTNumber,SpecimenId from @VLSpecimen     

    OPEN @MyCursor 
    FETCH NEXT FROM @MyCursor 
    INTO @VLPatientCode,@VLARTNumber,@VLSpecimenId

    WHILE @@FETCH_STATUS = 0
    BEGIN    
      
        INSERT @PatientHistory (PatientCode,ARTNumber,LabNumber,TestDate,Result,Copies_ml,LogCopies,Instrument) 
		SELECT VLPatient.PatientCode as PatientCode, dbo.VLPatient.ARTNumber as ARTNumber,VLSpecimen.LabNumber as LabNumber , VLSpecimenResult.FinalReportDate as TestDate, 
		VLSpecimenResult.FinalReportResult as Result,VLSpecimenResult.Copies_ml as Copies_ml , VLSpecimenResult.LogCopies as LogCopies,LabInstrument.LabInstrumentname as Instrument
        FROM dbo.VLRequestForm LEFT OUTER JOIN 
        dbo.VLPatient on dbo.VLPatient.Id = dbo.VLRequestForm.PatientId Inner Join
        dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId Inner  JOIN 
        dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId Inner  JOIN
        dbo.VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId left Join
        LabInstrument on dbo.LabInstrument.Id = dbo.VLSpecimenResult.LabInstrumentId  
        Where                      
        1 = Case when @VLARTNumber = '' Then 1 When VLPatient.ARTNumber  = @VLARTNumber Then 1 END and 
		1 = Case when  @VLPatientCode = '' Then 1 When VLPatient.PatientCode  =  @VLPatientCode  Then 1 END 
					    
  --    IF  ('PatientCode' =  @PatientCode)
  --     BEGIN
  --      INSERT @PatientHistory (PatientCode,ARTNumber,LabNumber,TestDate,Result,Copies_ml,LogCopies,Instrument) 
		--SELECT VLPatient.PatientCode as PatientCode, dbo.VLPatient.ARTNumber as ARTNumber,VLSpecimen.LabNumber as LabNumber , VLSpecimenResult.FinalReportDate as TestDate, 
		--VLSpecimenResult.FinalReportResult as Result,VLSpecimenResult.Copies_ml as Copies_ml , VLSpecimenResult.LogCopies as LogCopies,LabInstrument.LabInstrumentname as Instrument
  --      FROM dbo.VLRequestForm LEFT OUTER JOIN 
  --      dbo.VLPatient on dbo.VLPatient.Id = dbo.VLRequestForm.PatientId Inner Join
  --      dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId Inner  JOIN 
  --      dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId Inner  JOIN
  --      dbo.VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId left Join
  --      LabInstrument on dbo.LabInstrument.Id = dbo.VLSpecimenResult.LabInstrumentId  
  --      Where VLPatient.PatientCode  = @VLPatientCode --or VLSpecimen.Id= @VLSpecimenId                     
  --     END
       
      FETCH NEXT FROM @MyCursor 
      INTO @VLPatientCode,@VLARTNumber,@VLSpecimenId
    END; 

    CLOSE @MyCursor ;
    DEALLOCATE @MyCursor;
END;

select * from @PatientHistory group by PatientCode,ARTNumber,LabNumber,Result,TestDate,Copies_ml,LogCopies,Instrument;
GO
/****** Object:  StoredProcedure [dbo].[VLGetPatientByRequestId]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLGetPatientByRequestId]
	@Id int
AS
SELECT     dbo.VLPatient.Fullname, dbo.VLPatient.Sex, dbo.VLPatient.PatientCode, dbo.VLPatient.ARTNumber, dbo.VLRequestForm.CurrentRegimen, dbo.Province.ProvinceName, dbo.Facility.FacilityName, 
                      dbo.Facility.VLSMSNumber, dbo.Facility.VLEmail, dbo.FacilityType.FacilityTypeName, dbo.LLG.LLGName AS Township, dbo.VLRequestForm.Age,dbo.VLRequestForm.Age_Month, dbo.VLTestReason.Reasonfortest, 
                      dbo.SpecimenType.SpecimenName, dbo.VLRequestForm.RegistrationNo, dbo.VLRequestForm.BatchNumber, dbo.VLRequestForm.ReasonTest, dbo.VLRequestForm.PreviousLabNumber, 
                      dbo.VLRequestForm.SpecimenType, dbo.VLRequestForm.Adherence, dbo.VLRequestForm.PrevVLcopiesml, dbo.VLRequestForm.Mostrecentviralload, dbo.VLRequestForm.MostrecentviralloadLog, 
                      dbo.VLRequestForm.BaselineCD4count, dbo.VLRequestForm.MostrecentCD4count, dbo.VLRequestForm.DateCD4Test, dbo.VLRequestForm.Daterecentviralload, 
                      dbo.VLRequestForm.Patientontherapy, dbo.VLRequestForm.Patientevertherapy, dbo.VLRequestForm.PrevVLLog, dbo.VLRequestForm.ARTStaringDate, dbo.VLRequestForm.SampleStored,dbo.VLRequestForm.NurseTelephone,
                      dbo.VLRequestForm.NameOfNurseOrHEOCollectingDBS, dbo.VLSpecimen.LabNumber, dbo.VLSpecimen.specimencollectionTime, dbo.VLSpecimen.SampleCollectedDate, 
                      dbo.VLSpecimen.SampleShipmentDate, dbo.VLSpecimen.RegistrationDate, dbo.AppUser.FirstName + ' ' + dbo.AppUser.LastName AS UserEnteringData, dbo.VLSpecimen.SpecimenQuality, 
                      dbo.VLSpecimen.RejectedReason, dbo.VLSpecimen.RecievedDate,dbo.VLSpecimen.Id AS VLSpecimenId, dbo.VLSpecimenResult.LabInstrumentId, dbo.VLSpecimenResult.TestedBy, dbo.VLSpecimenResult.Copies_ml, 
                      dbo.VLSpecimenResult.LogCopies, dbo.VLSpecimenResult.DateCreated AS DateCreatedSpecimenResult, dbo.VLSpecimenResult.DateUpdated AS DateUpdatedSpecimenResult, 
                      dbo.VLSpecimenResult.UpdatedById AS UpdatedByIdSpecimenResult, dbo.VLSpecimenResult.CreatedById AS CreatedByIdSpecimenResult, 
                      SpecimenResultUpdatedBy.FirstName + ' ' + SpecimenResultUpdatedBy.LastName AS ResultApprovedBy, dbo.VLSpecimenResult.Id AS SpecimenResultId, 
                      dbo.VLSpecimenResult.FinalReportResult, dbo.VLSpecimenResult.FinalReportDate, dbo.VLSpecimenResult.Comment, dbo.VLStatus.Status, dbo.LabInstrument.LabInstrumentname,
                      dbo.VLRequestForm.ARVRegimenName
FROM         dbo.VLSpecimen LEFT OUTER JOIN
                      dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
                      dbo.FacilityType ON dbo.VLRequestForm.WardId = dbo.FacilityType.Id LEFT OUTER JOIN
                      dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
                      dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
                      dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
                      dbo.VLTestReason ON dbo.VLTestReason.Id = dbo.VLRequestForm.ReasonTest LEFT OUTER JOIN
                      dbo.SpecimenType ON dbo.SpecimenType.Id = dbo.VLRequestForm.SpecimenType LEFT OUTER JOIN
                      dbo.AppUser ON dbo.VLSpecimen.UserEnteringData = dbo.AppUser.UserId LEFT OUTER JOIN
                      dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
                      dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
                      dbo.LabInstrument ON dbo.VLSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID LEFT OUTER JOIN
                      dbo.AppUser AS SpecimenResultUpdatedBy ON dbo.VLSpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId
                      Where  
                       VLRequestForm.Id = @Id;                        

--SELECT VLPatientTherapies.* FROM VLPatientTherapies where VLPatientTherapies.RequestFormId =  @Id;
GO
/****** Object:  StoredProcedure [dbo].[VLLabSummaryReportByOutstanding]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLLabSummaryReportByOutstanding]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@CollectionFrom nvarchar(100)='' ,
	@CollectionTo nvarchar(100)='',
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' 
AS
Begin

DECLARE  @VLFacility  TABLE(ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
							FacilityTypeName nvarchar(100)
                           )
                            
DECLARE @VLOutstanding TABLE (No_Outstanding int,
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
							FacilityTypeName nvarchar(100)
							)
                              
DECLARE @VLReport1 TABLE (   No_Patient int,
							No_Sample_Recieved int,
							No_Rejected_Sample int,							
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
							FacilityTypeName nvarchar(100)
							) 
							
DECLARE @VLReport2 TABLE (  No_of_Sample_Tested int,
							No_of_Sample_Not_Tested int,
							Tot_Detected_G_1000 int,
							Tot_Detected_LE_1000 int,
							Total_Suppressed int,
							Invalid_Error_Noresult int,
							ProvinceName nvarchar(100),							
							FacilityName nvarchar(100),
							FacilityTypeName nvarchar(100)
						)     
							
DECLARE @VLReportAll TABLE (No_Outstanding int,							
							No_Patient int,
							No_Sample_Recieved int,
							No_Rejected_Sample int,
							No_of_Sample_Tested int,
							No_of_Sample_Not_Tested int,
							Tot_Detected_G_1000 int,
							Tot_Detected_LE_1000 int,
							Total_Suppressed int,
							Invalid_Error_Noresult int,
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
							FacilityTypeName nvarchar(100)
							)     
                                                         
	INSERT @VLFacility (ProvinceName,FacilityName,FacilityTypeName)                                      
	SELECT  Province.ProvinceName, Facility.FacilityName as FacilityName,FacilityType.FacilityTypeName
	FROM 
	dbo.VLPatient LEFT OUTER JOIN dbo.VLRequestForm on VLPatient.Id=VLRequestForm.PatientId  LEFT OUTER JOIN		
	dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN 
	dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId LEFT OUTER JOIN 
	--VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId LEFT OUTER JOIN				
	dbo.Facility ON dbo.Facility.Id = dbo.VLRequestForm.FacilityId LEFT OUTER JOIN
	dbo.Province ON dbo.Facility.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
	dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id  	
	Where 
	(1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimen.RecievedDate between @DateFrom and @DateTo Then 1 END
	or 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END)
	and 
	(1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimen.SampleCollectedDate between @CollectionFrom and @CollectionTo  Then 1 END
	or 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate between @CollectionFrom and @CollectionTo  Then 1 END)
	and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
	and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
	and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
	Group by Province.ProvinceName,Facility.FacilityName,FacilityType.FacilityTypeName

if (@DateFrom <> '' and  @DateTo <> '') or (@CollectionFrom <> '' and  @CollectionTo <>'')
Begin
	--@VLOutstanding
	INSERT @VLOutstanding (No_Outstanding,ProvinceName,FacilityName,FacilityTypeName)
	SELECT  Distinct COUNT(dbo.VLRequestForm.Id)
	,Province.ProvinceName as ProvinceName,Facility.FacilityName as FacilityName,FacilityType.FacilityTypeName
	FROM 
	dbo.VLPatient LEFT OUTER JOIN dbo.VLRequestForm on VLPatient.Id=VLRequestForm.PatientId  LEFT OUTER JOIN		
	dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN 
	dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId LEFT OUTER JOIN 
	--VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId LEFT OUTER JOIN				
	dbo.Facility ON dbo.Facility.Id = dbo.VLRequestForm.FacilityId LEFT OUTER JOIN
	dbo.Province ON dbo.Facility.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
	dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id  
	Where    
	1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimen.RecievedDate between '01-01-1900' and DATEADD(dd, -1, @DateFrom) Then 1 END
	and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimen.SampleCollectedDate between '01-01-1900' and DATEADD(dd, -1, @CollectionFrom)  Then 1 END
	and 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END
	and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate between @CollectionFrom and @CollectionTo  Then 1 END
	and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
	and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
	and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
	Group by Province.ProvinceName,Facility.FacilityName,FacilityType.FacilityTypeName
	End
	--@VLReport1
	INSERT @VLReport1 (No_Patient,No_Sample_Recieved,No_Rejected_Sample,ProvinceName,FacilityName,FacilityTypeName)
	SELECT   COUNT(Distinct dbo.VLPatient.ARTNumber),COUNT(dbo.VLRequestForm.Id),COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Rejected' THEN 1 END),
	Province.ProvinceName as ProvinceName_Ot,Facility.FacilityName as FacilityName_Ot,FacilityType.FacilityTypeName
	FROM 
	dbo.VLPatient LEFT OUTER JOIN dbo.VLRequestForm on VLPatient.Id=VLRequestForm.PatientId  LEFT OUTER JOIN		
	dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN 
	dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId LEFT OUTER JOIN 
	--VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId LEFT OUTER JOIN				
	dbo.Facility ON dbo.Facility.Id = dbo.VLRequestForm.FacilityId LEFT OUTER JOIN
	dbo.Province ON dbo.Facility.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
	dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id   Where    
	1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimen.RecievedDate between @DateFrom and @DateTo Then 1 END
	and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimen.SampleCollectedDate between @CollectionFrom and @CollectionTo Then 1 END
	and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
	and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
	and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
	Group by Province.ProvinceName,Facility.FacilityName,FacilityType.FacilityTypeName

	--@VLReport2
	 
	INSERT @VLReport2 (No_of_Sample_Tested,No_of_Sample_Not_Tested,Tot_Detected_LE_1000,Tot_Detected_G_1000,Total_Suppressed,Invalid_Error_Noresult,
	ProvinceName,FacilityName,FacilityTypeName)
	SELECT   COUNT(CASE WHEN VLSpecimenResult.FinalReportResult != 'Rejected' and  VLStatus.Status != 'RecivedFromFacility' THEN 1 END ),
	COUNT(CASE WHEN VLStatus.Status = 'RecivedFromFacility' THEN 1 END ),
	(COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Detected' and  VLSpecimenResult.Copies_ml <= 1000 THEN 1 END) 
	+  COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Below Minimum Detectable Level'  THEN 1 END)
	+  COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Not Detected'  THEN 1 END)),
	( COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Detected' and  VLSpecimenResult.Copies_ml > 1000 THEN 1 END) 
	+  COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Above Upper Limit of Quantification'  THEN 1 END)),
	COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Not Detected'  THEN 1 END),
	(COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Invalid' THEN 1 END) +
	  COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Error' THEN 1 END) +
	  COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'No Result' THEN 1 END)),
	Province.ProvinceName as ProvinceName_Ot,Facility.FacilityName as FacilityName_Ot,
	FacilityType.FacilityTypeName
	FROM dbo.VLPatient LEFT OUTER JOIN dbo.VLRequestForm on VLPatient.Id=VLRequestForm.PatientId  LEFT OUTER JOIN		
	dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN 
	dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId LEFT OUTER JOIN 
	VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId LEFT OUTER JOIN				
	dbo.Facility ON dbo.Facility.Id = dbo.VLRequestForm.FacilityId LEFT OUTER JOIN
	dbo.Province ON dbo.Facility.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
	dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id    where  
	1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimen.RecievedDate between @DateFrom and @DateTo Then 1 END
	and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimen.SampleCollectedDate between @CollectionFrom and @CollectionTo Then 1 END
	and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
	and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
	and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
	Group by Province.ProvinceName,Facility.FacilityName,FacilityType.FacilityTypeName

	INSERT  @VLReportAll (ProvinceName,FacilityName,FacilityTypeName)                                      
	SELECT  ProvinceName,FacilityName, FacilityTypeName FROM @VLFacility
	--Where ProvinceName is not null and
	--FacilityName is not null and FacilityTypeName is not null

    --VLOutstanding
     Update A set No_Outstanding=ISNULL(OT.No_Outstanding, 0 )    
     from @VLReportAll A LEFT OUTER JOIN @VLOutstanding OT on A.ProvinceName = ot.ProvinceName and 
	 A.FacilityName = ot.FacilityName --where A.ProvinceName=@ProvinceName and A.FacilityName=@FacilityName and A.FacilityTypeName=@FacilityTypeName;
	 
	 --VLReport1
     Update A set No_Patient=ISNULL(OT.No_Patient, 0 ),
     No_Sample_Recieved=ISNULL(OT.No_Sample_Recieved, 0 ),
     No_Rejected_Sample=ISNULL(OT.No_Rejected_Sample, 0 )     
     from @VLReportAll A LEFT OUTER JOIN @VLReport1 OT on A.ProvinceName = ot.ProvinceName and 
	 A.FacilityName = ot.FacilityName --where A.ProvinceName=@ProvinceName and A.FacilityName=@FacilityName and A.FacilityTypeName=@FacilityTypeName;

	--VLReport2
	 Update A set No_of_Sample_Tested=ISNULL(OT.No_of_Sample_Tested, 0 ),
	 No_of_Sample_Not_Tested=ISNULL(OT.No_of_Sample_Not_Tested, 0 ),
     Tot_Detected_G_1000=ISNULL(OT.Tot_Detected_G_1000, 0 ),
     Tot_Detected_LE_1000=ISNULL(OT.Tot_Detected_LE_1000, 0 ),
     Total_Suppressed=ISNULL(OT.Total_Suppressed, 0 ),
     Invalid_Error_Noresult=ISNULL(OT.Invalid_Error_Noresult, 0 )
     from @VLReportAll A LEFT OUTER JOIN @VLReport2 OT on A.ProvinceName = ot.ProvinceName and 
	 A.FacilityName = ot.FacilityName --where A.ProvinceName=@ProvinceName and A.FacilityName=@FacilityName and A.FacilityTypeName=@FacilityTypeName;
	 
	 Update @VLReportAll set 
	 No_of_Sample_Not_Tested=((No_Outstanding+No_Sample_Recieved)- (No_of_Sample_Tested+No_Rejected_Sample))  
	 
	select * from @VLReportAll
end
GO
/****** Object:  StoredProcedure [dbo].[VLLabTestedSummary]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLLabTestedSummary]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' 
AS
SELECT			COUNT(Distinct dbo.VLPatient.ARTNumber) as No_Patient, 
			    COUNT(dbo.VLRequestForm.Id) AS 'No_Sample_Recieved', 
                COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Rejected' THEN 1 END) AS 'No_Rejected_Sample',
                COUNT(CASE WHEN VLSpecimenResult.FinalReportResult != 'Rejected' and  VLStatus.Status != 'RecivedFromFacility' THEN 1 END ) As 'No_of_Sample_Tested',
               -- COUNT(CASE WHEN VLStatus.Status = 'RecivedFromFacility' THEN 1 END ) As 'No_of_Sample_Not_Tested',                
                COUNT(dbo.VLRequestForm.Id) - ( COUNT(CASE WHEN VLSpecimenResult.FinalReportResult != 'Rejected' and  VLStatus.Status != 'RecivedFromFacility' THEN 1 END )+ COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Rejected' THEN 1 END)) As 'No_of_Sample_Not_Tested',
                (COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Detected' and  ISNULL(VLSpecimenResult.Copies_ml,0) <= 1000 THEN 1 END) 
				+  COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Below Minimum Detectable Level'  THEN 1 END)
				+  COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Not Detected'  THEN 1 END))  AS 'Tot_Detected_LE_1000',
                 ( COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Detected' and  VLSpecimenResult.Copies_ml > 1000 THEN 1 END) 
				+  COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Above Upper Limit of Quantification'  THEN 1 END)) AS 'Tot_Detected_G_1000',
                 COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Not Detected'  THEN 1 END) AS 'Total_Suppressed',
                (COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Invalid' THEN 1 END) +
				 COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Error' THEN 1 END) +
				 COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'No Result' THEN 1 END)) AS 'Invalid_Error_Noresult',                          
                Province.ProvinceName as ProvinceName,Facility.FacilityName as FacilityName,
                FacilityType.FacilityTypeName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName             
				FROM dbo.VLPatient LEFT OUTER JOIN dbo.VLRequestForm on VLPatient.Id=VLRequestForm.PatientId  LEFT OUTER JOIN		
				dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN 
				dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId LEFT OUTER JOIN 
				VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId LEFT OUTER JOIN				
				dbo.Facility ON dbo.Facility.Id = dbo.VLRequestForm.FacilityId LEFT OUTER JOIN
				dbo.Province ON dbo.Facility.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
				dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id                               
                Where    
                1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END
                and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
                and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
                and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
                Group by Province.ProvinceName,Facility.FacilityName,FacilityType.FacilityTypeName
GO
/****** Object:  StoredProcedure [dbo].[VLLatestSummaryReport]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLLatestSummaryReport]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@Region int = 0,
	@Facility int = 0
AS
SELECT                          
                        
                        COUNT(VLSpecimenResult.Id) AS 'Total_Test',
                        COUNT(CASE WHEN VLSpecimenResult.Copies_ml < 250 AND VLSpecimenResult.FinalReportResult != 'Rejected' THEN 1 END) AS 'Highly_Superssed',
                        COUNT(CASE WHEN (VLSpecimenResult.Copies_ml between 250 and 1000) AND VLSpecimenResult.FinalReportResult != 'Rejected' THEN 1 END) AS 'Superssed', 
                        COUNT(CASE WHEN VLSpecimenResult.Copies_ml < 250 AND VLSpecimenResult.FinalReportResult != 'Rejected' THEN 1 END ) As 'Undetectable',
                        COUNT(CASE WHEN VLSpecimenResult.FinalReportResult = 'Rejected' THEN 1 END ) As 'Rejected'
                        FROM dbo.VLRequestForm LEFT  JOIN 
                          dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId left JOIN 
                          dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId left JOIN 
                          dbo.VLStatus On dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId left  JOIN 
                          dbo.Province ON dbo.VLRequestForm.ProvinceId = dbo.Province.Id left  JOIN 
                          dbo.Facility ON dbo.Facility.Id = dbo.VLRequestForm.FacilityId 
                      Where    1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When VLSpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END And
                              1 = Case when @Region = 0 Then 1 when dbo.VLRequestForm.ProvinceId = @Region Then 1 End And
                              1 = Case when @Facility = 0 Then 1 when dbo.VLRequestForm.FacilityId = @Facility Then 1 End And 
                              (dbo.VLStatus.Status !='FilledResult' or dbo.VLStatus.Status !='RecivedFromFacility')
GO
/****** Object:  StoredProcedure [dbo].[VLPatientTestedByAge]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLPatientTestedByAge]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@CollectionFrom nvarchar(100)='' ,
	@CollectionTo nvarchar(100)='',
	@TestFrom nvarchar(100)='' ,
	@TestTo nvarchar(100)='',
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' ,
	@Copiesml nvarchar(100)='' 
AS
Begin
                            
DECLARE @VLReport1 TABLE   (ARTNumber nvarchar(100),
							RequestFormId int,
							Age int,
							Age_month int,
							FinalReportResult nvarchar(500),
							Copies_ml float,
							FinalReportDate datetime,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))   
                            
DECLARE @VLLastDateReport1 TABLE 
							(ARTNumber nvarchar(100),
							Age int,
							Age_month int,
							FinalReportResult nvarchar(500),
							Copies_ml float,
							FinalReportDate datetime,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))  

------------------------------@VLReport1----------------------------
INSERT @VLReport1 (ARTNumber,RequestFormId,Age,Age_month,FinalReportResult,Copies_ml,FinalReportDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
select dbo.VLPatient.ARTNumber,dbo.VLRequestForm.Id,isnull(dbo.VLRequestForm.Age,0),isnull(dbo.VLRequestForm.Age_Month,0),VLSpecimenResult.FinalReportResult,VLSpecimenResult.Copies_ml,VLSpecimenResult.FinalReportDate,FacilityType.FacilityTypeName,
Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
FROM 
dbo.VLPatient LEFT OUTER JOIN dbo.VLRequestForm on VLPatient.Id=VLRequestForm.PatientId  LEFT OUTER JOIN		
dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN 
dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId LEFT OUTER JOIN 
VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId LEFT OUTER JOIN				
--dbo.VLTestReason on VLRequestForm.ReasonTest =VLTestReason.Id LEFT OUTER JOIN
dbo.Facility ON dbo.Facility.Id = dbo.VLRequestForm.FacilityId LEFT OUTER JOIN
dbo.Province ON dbo.Facility.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id  

Where 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimen.RecievedDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimen.SampleCollectedDate between @CollectionFrom and @CollectionTo  Then 1 END
and 1 = Case when @TestFrom = '' and  @TestTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate between @TestFrom and @TestTo  Then 1 END
and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END

------------------------------@VLLastDateReport1----------------------------

INSERT @VLLastDateReport1 (ARTNumber,Age,Age_Month,FinalReportResult,Copies_ml,FinalReportDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
select t.ARTNumber,t.Age,t.Age_month,t.FinalReportResult,t.Copies_ml,t.FinalReportDate,t.FacilityTypeName,t.ProvinceName,t.FacilityName,t.LaboratoryName
from @VLReport1 t inner join 
( select ARTNumber,max(FinalReportDate) as MaxFinalReportDate
    from @VLReport1 
    group by ARTNumber
) tm on t.ARTNumber = tm.ARTNumber and t.FinalReportDate = tm.MaxFinalReportDate

if @Copiesml ='<=1000'
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,		
		(COUNT(CASE WHEN age =0 and Age_Month = 0 THEN 1 END)) As Nodata , 
		(COUNT(CASE WHEN Age >0 and Age <2 THEN 1 END) + COUNT(CASE WHEN Age =0 and Age_month <> 0 THEN 1 END) )  As Yrs2 , 
		(COUNT(CASE WHEN Age >= 2 and Age <= 9 THEN 1 END)) As Yrs2_9 , 
		(COUNT(CASE WHEN Age >= 10 and Age <= 14 THEN 1 END)) As Yrs10_14 , 
		(COUNT(CASE WHEN Age >= 15 and Age <= 19 THEN 1 END)) As Yrs15_19 , 
		(COUNT(CASE WHEN Age >= 20 and Age <= 24 THEN 1 END)) As Yrs20_24 , 
		(COUNT(CASE WHEN Age >= 25 THEN 1 END)) As Yrs25 , 
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult = 'Detected' and  Copies_ml <= 1000)
		or (FinalReportResult = 'Below Minimum Detectable Level') or (FinalReportResult = 'Not Detected')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName	
	end 
else if @Copiesml ='>1000'
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN age =0 and Age_Month = 0 THEN 1 END)) As Nodata , 
		(COUNT(CASE WHEN Age >0 and Age <2 THEN 1 END) + COUNT(CASE WHEN Age =0 and Age_month <> 0 THEN 1 END) )  As Yrs2 ,  
		(COUNT(CASE WHEN Age >= 2 and Age <= 9 THEN 1 END)) As Yrs2_9 , 
		(COUNT(CASE WHEN Age >= 10 and Age <= 14 THEN 1 END)) As Yrs10_14 , 
		(COUNT(CASE WHEN Age >= 15 and Age <= 19 THEN 1 END)) As Yrs15_19 , 
		(COUNT(CASE WHEN Age >= 20 and Age <= 24 THEN 1 END)) As Yrs20_24 , 
		(COUNT(CASE WHEN Age >= 25 THEN 1 END)) As Yrs25 , 
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult = 'Detected' and  Copies_ml > 1000)
		or (FinalReportResult = 'Above Upper Limit of Quantification')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
	end 
else if @Copiesml ='ValidOutcome'
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN age =0 and Age_Month = 0 THEN 1 END)) As Nodata , 
		(COUNT(CASE WHEN Age >0 and Age <2 THEN 1 END) + COUNT(CASE WHEN Age =0 and Age_month <> 0 THEN 1 END) )  As Yrs2 ,  
		(COUNT(CASE WHEN Age >= 2 and Age <= 9 THEN 1 END)) As Yrs2_9 , 
		(COUNT(CASE WHEN Age >= 10 and Age <= 14 THEN 1 END)) As Yrs10_14 , 
		(COUNT(CASE WHEN Age >= 15 and Age <= 19 THEN 1 END)) As Yrs15_19 , 
		(COUNT(CASE WHEN Age >= 20 and Age <= 24 THEN 1 END)) As Yrs20_24 , 
		(COUNT(CASE WHEN Age >= 25 THEN 1 END)) As Yrs25 , 
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult= 'Not Detected' or FinalReportResult= 'Detected' or FinalReportResult = 'Above Upper Limit of Quantification' 
		or FinalReportResult ='Below Minimum Detectable Level')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
	end 	
else 
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN age =0 and Age_Month = 0 THEN 1 END)) As Nodata , 
		(COUNT(CASE WHEN Age >0 and Age <2 THEN 1 END) + COUNT(CASE WHEN Age =0 and Age_month <> 0 THEN 1 END))  As Yrs2 , 
		(COUNT(CASE WHEN Age >= 2 and Age <= 9 THEN 1 END)) As Yrs2_9 , 
		(COUNT(CASE WHEN Age >= 10 and Age <= 14 THEN 1 END)) As Yrs10_14 , 
		(COUNT(CASE WHEN Age >= 15 and Age <= 19 THEN 1 END)) As Yrs15_19 , 
		(COUNT(CASE WHEN Age >= 20 and Age <= 24 THEN 1 END)) As Yrs20_24 , 
		(COUNT(CASE WHEN Age >= 25 THEN 1 END)) As Yrs25 , 
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult= 'Not Detected' or FinalReportResult= 'Detected' or FinalReportResult = 'Above Upper Limit of Quantification' 
		or FinalReportResult = 'Invalid' or FinalReportResult = 'Error' or FinalReportResult = 'No Result' or FinalReportResult ='Below Minimum Detectable Level')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
	end 
	
--SELECT PatientId As No_Patient,
--Age , FinalReportResult,
--FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
--From @VLLastDateReport1

--Where (FinalReportResult= 'Not Detected' or FinalReportResult= 'Detected' or FinalReportResult = 'Above Upper Limit of Quantification' or FinalReportResult = 'Not Detected'
--or FinalReportResult = 'Invalid' or FinalReportResult = 'Error' or FinalReportResult = 'No Result')
--and Age is not null

--Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
end
GO
/****** Object:  StoredProcedure [dbo].[VLPatientTestedByARTRegimen]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLPatientTestedByARTRegimen]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@CollectionFrom nvarchar(100)='' ,
	@CollectionTo nvarchar(100)='',
	@TestFrom nvarchar(100)='' ,
	@TestTo nvarchar(100)=''
AS
Begin
             
						                            
DECLARE @VLReport1 TABLE   (ARTNumber nvarchar(100),
							RequestFormId int,							
							ARVRegimenName nvarchar(300),
							FinalReportResult nvarchar(500),
							Copies_ml float,
							FinalReportDate datetime,							
                            LaboratoryName nvarchar(50))   
                            
DECLARE @VLLastDateReport1 TABLE 
							(ARTNumber nvarchar(100),
							ARVRegimenName nvarchar(300),
							FinalReportResult nvarchar(500),
							Copies_ml float,
							FinalReportDate datetime,							
                            LaboratoryName nvarchar(50))  
                            

------------------------------@VLReport1----------------------------
INSERT @VLReport1 (ARTNumber,RequestFormId,ARVRegimenName,FinalReportResult,Copies_ml,FinalReportDate,LaboratoryName)    
select dbo.VLPatient.ARTNumber,dbo.VLRequestForm.Id,isnull(VLRequestForm.ARVRegimenName,''),VLSpecimenResult.FinalReportResult,VLSpecimenResult.Copies_ml,VLSpecimenResult.FinalReportDate,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
From  
dbo.VLPatient LEFT OUTER JOIN dbo.VLRequestForm ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id 
where 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimen.RecievedDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimen.SampleCollectedDate between @CollectionFrom and @CollectionTo  Then 1 END
and 1 = Case when @TestFrom = '' and  @TestTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate between @TestFrom and @TestTo  Then 1 END
------------------------------@VLLastDateReport1 (get Patient)----------------------------

INSERT @VLLastDateReport1 (ARTNumber,ARVRegimenName,FinalReportResult,Copies_ml,FinalReportDate,LaboratoryName)    
select t.ARTNumber,isnull(t.ARVRegimenName,''),t.FinalReportResult,t.Copies_ml,t.FinalReportDate,t.LaboratoryName
from @VLReport1 t inner join 
( select ARTNumber,max(FinalReportDate) as MaxFinalReportDate
    from @VLReport1 
    group by ARTNumber
) tm on t.ARTNumber = tm.ARTNumber and t.FinalReportDate = tm.MaxFinalReportDate


		SELECT  COUNT(ARTNumber) As No_Patient,		
		(COUNT(CASE WHEN FinalReportResult = 'Detected' and  Copies_ml <= 1000 THEN 1 END)
		+ COUNT(CASE WHEN FinalReportResult = 'Below Minimum Detectable Level' THEN 1 END)
		+ COUNT(CASE WHEN FinalReportResult = 'Not Detected' THEN 1 END)
		) As LE1000 , 
		(COUNT(CASE WHEN FinalReportResult = 'Detected' and  Copies_ml > 1000 THEN 1 END)
		+ COUNT(CASE WHEN FinalReportResult = 'Above Upper Limit of Quantification' THEN 1 END))
		As GT1000 , ARVRegimenName As ARVRegimen,LaboratoryName
		From @VLLastDateReport1 
		Where 		
		(FinalReportResult= 'Not Detected' or FinalReportResult= 'Detected' or FinalReportResult = 'Above Upper Limit of Quantification' 
		or FinalReportResult = 'Invalid' or FinalReportResult = 'Error' or FinalReportResult = 'No Result' or FinalReportResult ='Below Minimum Detectable Level')
		Group by ARVRegimenName,LaboratoryName	order by ARVRegimenName desc		

end
GO
/****** Object:  StoredProcedure [dbo].[VLPatientTestedByReason]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLPatientTestedByReason]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@CollectionFrom nvarchar(100)='' ,
	@CollectionTo nvarchar(100)='',
	@TestFrom nvarchar(100)='' ,
	@TestTo nvarchar(100)='',
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' ,
	@Copiesml nvarchar(100)='' 
AS
Begin
                            
DECLARE @VLReport1 TABLE   (ARTNumber nvarchar(100),
							RequestFormId int,
							ReasonTest nvarchar(300),
							FinalReportResult nvarchar(500),
							Copies_ml float,
							FinalReportDate datetime,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))   
                            
DECLARE @VLLastDateReport1 TABLE 
							(ARTNumber nvarchar(100),
							 ReasonTest nvarchar(300),
							FinalReportResult nvarchar(500),
							Copies_ml float,
							FinalReportDate datetime,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))  

------------------------------@VLReport1----------------------------
INSERT @VLReport1 (ARTNumber,RequestFormId,ReasonTest,FinalReportResult,Copies_ml,FinalReportDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
select dbo.VLPatient.ARTNumber,dbo.VLRequestForm.Id,isnull(VLTestReason.Reasonfortest,'Not mentioned on form'),VLSpecimenResult.FinalReportResult,VLSpecimenResult.Copies_ml,VLSpecimenResult.FinalReportDate,FacilityType.FacilityTypeName,
Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
FROM 
dbo.VLPatient LEFT OUTER JOIN dbo.VLRequestForm on VLPatient.Id=VLRequestForm.PatientId  LEFT OUTER JOIN		
dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN 
dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId LEFT OUTER JOIN 
VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId LEFT OUTER JOIN				
dbo.VLTestReason on VLRequestForm.ReasonTest =VLTestReason.Id LEFT OUTER JOIN
dbo.Facility ON dbo.Facility.Id = dbo.VLRequestForm.FacilityId LEFT OUTER JOIN
dbo.Province ON dbo.Facility.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id  
Where 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimen.RecievedDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimen.SampleCollectedDate between @CollectionFrom and @CollectionTo  Then 1 END
and 1 = Case when @TestFrom = '' and  @TestTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate between @TestFrom and @TestTo  Then 1 END
and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END

------------------------------@VLLastDateReport1----------------------------

INSERT @VLLastDateReport1 (ARTNumber,ReasonTest,FinalReportResult,Copies_ml,FinalReportDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
select t.ARTNumber,t.ReasonTest,t.FinalReportResult,t.Copies_ml,t.FinalReportDate,t.FacilityTypeName,t.ProvinceName,t.FacilityName,t.LaboratoryName
from @VLReport1 t inner join 
( select ARTNumber,max(FinalReportDate) as MaxFinalReportDate
    from @VLReport1 
    group by ARTNumber
) tm on t.ARTNumber = tm.ARTNumber and t.FinalReportDate = tm.MaxFinalReportDate

if @Copiesml ='<=1000'
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,		
		(COUNT(CASE WHEN ReasonTest = 'Routine' THEN 1 END)) As Routine , 		
		(COUNT(CASE WHEN ReasonTest = 'Other'  THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest <> 'Routine' and ReasonTest <> 'Targeted - Immunological Failure' 
		and ReasonTest <> 'Repeated after enhanced adherence' and ReasonTest = 'Targeted' and 
		ReasonTest <> 'Targeted - Immunological Failure' and  ReasonTest <> 'Targeted - Clinical Failure' 
		and ReasonTest <> 'Not mentioned on form' and ReasonTest <> 'Other' THEN 1 END)
		) As Other , 
		(COUNT(CASE WHEN ReasonTest = 'Targeted - Immunological Failure' THEN 1 END)) As TargetedIF , 
		(COUNT(CASE WHEN ReasonTest = 'Repeated after enhanced adherence' THEN 1 END)) As RepeatedEA , 		
		(COUNT(CASE WHEN ReasonTest = 'Targeted'  THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest = 'Targeted - Immunological Failure' THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest = 'Targeted - Clinical Failure' THEN 1 END)) As Targeted , 
		(COUNT(CASE WHEN ReasonTest = 'Targeted - Clinical Failure' THEN 1 END)) As TargetedCF , 		
		(COUNT(CASE WHEN ReasonTest = 'Not mentioned on form' THEN 1 END)) As NoData , 
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult = 'Detected' and  Copies_ml <= 1000)
		or (FinalReportResult = 'Below Minimum Detectable Level') or (FinalReportResult = 'Not Detected')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName	
	end 
else if @Copiesml ='>1000'
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN ReasonTest = 'Routine' THEN 1 END)) As Routine , 		
		(COUNT(CASE WHEN ReasonTest = 'Other'  THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest <> 'Routine' and ReasonTest <> 'Targeted - Immunological Failure' 
		and ReasonTest <> 'Repeated after enhanced adherence' and ReasonTest = 'Targeted' and 
		ReasonTest <> 'Targeted - Immunological Failure' and  ReasonTest <> 'Targeted - Clinical Failure' 
		and ReasonTest <> 'Not mentioned on form' and ReasonTest <> 'Other' THEN 1 END)
		) As Other ,  
		(COUNT(CASE WHEN ReasonTest = 'Targeted - Immunological Failure' THEN 1 END)) As TargetedIF , 
		(COUNT(CASE WHEN ReasonTest = 'Repeated after enhanced adherence' THEN 1 END)) As RepeatedEA , 		
		(COUNT(CASE WHEN ReasonTest = 'Targeted'  THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest = 'Targeted - Immunological Failure' THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest = 'Targeted - Clinical Failure' THEN 1 END)) As Targeted , 
		(COUNT(CASE WHEN ReasonTest = 'Targeted - Clinical Failure' THEN 1 END)) As TargetedCF , 		
		(COUNT(CASE WHEN ReasonTest = 'Not mentioned on form' THEN 1 END)) As NoData , 	
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult = 'Detected' and  Copies_ml > 1000)
		or (FinalReportResult = 'Above Upper Limit of Quantification')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
	end 
else if @Copiesml ='ValidOutcome'
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN ReasonTest = 'Routine' THEN 1 END)) As Routine , 		
		(COUNT(CASE WHEN ReasonTest = 'Other'  THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest <> 'Routine' and ReasonTest <> 'Targeted - Immunological Failure' 
		and ReasonTest <> 'Repeated after enhanced adherence' and ReasonTest = 'Targeted' and 
		ReasonTest <> 'Targeted - Immunological Failure' and  ReasonTest <> 'Targeted - Clinical Failure' 
		and ReasonTest <> 'Not mentioned on form' and ReasonTest <> 'Other' THEN 1 END)
		) As Other ,  
		(COUNT(CASE WHEN ReasonTest = 'Targeted - Immunological Failure' THEN 1 END)) As TargetedIF , 
		(COUNT(CASE WHEN ReasonTest = 'Repeated after enhanced adherence' THEN 1 END)) As RepeatedEA , 		
		(COUNT(CASE WHEN ReasonTest = 'Targeted'  THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest = 'Targeted - Immunological Failure' THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest = 'Targeted - Clinical Failure' THEN 1 END)) As Targeted , 
		(COUNT(CASE WHEN ReasonTest = 'Targeted - Clinical Failure' THEN 1 END)) As TargetedCF , 		
		(COUNT(CASE WHEN ReasonTest = 'Not mentioned on form' THEN 1 END)) As NoData , 	
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult= 'Not Detected' or FinalReportResult= 'Detected' or FinalReportResult = 'Above Upper Limit of Quantification' 
		or FinalReportResult ='Below Minimum Detectable Level')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
	end 
else 
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN ReasonTest ='Routine' THEN 1 END)) As Routine , 		
		(COUNT(CASE WHEN ReasonTest = 'Other'  THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest <> 'Routine' and ReasonTest <> 'Targeted - Immunological Failure' 
		and ReasonTest <> 'Repeated after enhanced adherence' and ReasonTest = 'Targeted' and 
		ReasonTest <> 'Targeted - Immunological Failure' and  ReasonTest <> 'Targeted - Clinical Failure' 
		and ReasonTest <> 'Not mentioned on form' and ReasonTest <> 'Other' THEN 1 END)
		) As Other ,  
		(COUNT(CASE WHEN ReasonTest = 'Targeted - Immunological Failure' THEN 1 END)) As TargetedIF , 
		(COUNT(CASE WHEN ReasonTest = 'Repeated after enhanced adherence' THEN 1 END)) As RepeatedEA , 		
		(COUNT(CASE WHEN ReasonTest = 'Targeted'  THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest = 'Targeted - Immunological Failure' THEN 1 END)
		+ COUNT(CASE WHEN ReasonTest = 'Targeted - Clinical Failure' THEN 1 END)) As Targeted , 
		(COUNT(CASE WHEN ReasonTest = 'Targeted - Clinical Failure' THEN 1 END)) As TargetedCF , 		
		(COUNT(CASE WHEN ReasonTest = 'Not mentioned on form' THEN 1 END)) As NoData , 
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult= 'Not Detected' or FinalReportResult= 'Detected' or FinalReportResult = 'Above Upper Limit of Quantification' 
		or FinalReportResult = 'Invalid' or FinalReportResult = 'Error' or FinalReportResult = 'No Result' or FinalReportResult ='Below Minimum Detectable Level')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
	end 
end
GO
/****** Object:  StoredProcedure [dbo].[VLPatientTestedBySex]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLPatientTestedBySex]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@CollectionFrom nvarchar(100)='' ,
	@CollectionTo nvarchar(100)='',
	@TestFrom nvarchar(100)='' ,
	@TestTo nvarchar(100)='',
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' ,
	@Copiesml nvarchar(100)='' 
AS
Begin
                            
DECLARE @VLReport1 TABLE   (ARTNumber nvarchar(100),
							RequestFormId int,
							Sex nvarchar(10),
							FinalReportResult nvarchar(500),
							Copies_ml float,
							FinalReportDate datetime,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))   
                            
DECLARE @VLLastDateReport1 TABLE 
							(ARTNumber nvarchar(100),
							 Sex nvarchar(10),
							FinalReportResult nvarchar(500),
							Copies_ml float,
							FinalReportDate datetime,
							FacilityTypeName nvarchar(100),
							ProvinceName nvarchar(100),
							FacilityName nvarchar(100),
                            LaboratoryName nvarchar(50))  

------------------------------@VLReport1----------------------------
INSERT @VLReport1 (ARTNumber,RequestFormId,Sex,FinalReportResult,Copies_ml,FinalReportDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
select dbo.VLPatient.ARTNumber,dbo.VLRequestForm.Id,isnull(VLPatient.Sex,'NA'),VLSpecimenResult.FinalReportResult,VLSpecimenResult.Copies_ml,VLSpecimenResult.FinalReportDate,FacilityType.FacilityTypeName,
Province.ProvinceName, Facility.FacilityName as FacilityName,(Select dbo.Laboratory.Description from dbo.Laboratory) as LaboratoryName
FROM 
dbo.VLPatient LEFT OUTER JOIN dbo.VLRequestForm on VLPatient.Id=VLRequestForm.PatientId  LEFT OUTER JOIN		
dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN 
dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId LEFT OUTER JOIN 
VLStatus ON dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId LEFT OUTER JOIN				
dbo.VLTestReason on VLRequestForm.ReasonTest =VLTestReason.Id LEFT OUTER JOIN
dbo.Facility ON dbo.Facility.Id = dbo.VLRequestForm.FacilityId LEFT OUTER JOIN
dbo.Province ON dbo.Facility.ProvinceId = dbo.Province.Id LEFT OUTER JOIN 
dbo.FacilityType ON dbo.Facility.FacilityTypeId = dbo.FacilityType.Id  

Where 1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimen.RecievedDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimen.SampleCollectedDate between @CollectionFrom and @CollectionTo  Then 1 END
and 1 = Case when @TestFrom = '' and  @TestTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate between @TestFrom and @TestTo  Then 1 END
and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END

------------------------------@VLLastDateReport1----------------------------

INSERT @VLLastDateReport1 (ARTNumber,Sex,FinalReportResult,Copies_ml,FinalReportDate,FacilityTypeName,ProvinceName,FacilityName,LaboratoryName)    
select t.ARTNumber,t.Sex,t.FinalReportResult,t.Copies_ml,t.FinalReportDate,t.FacilityTypeName,t.ProvinceName,t.FacilityName,t.LaboratoryName
from @VLReport1 t inner join 
( select ARTNumber,max(FinalReportDate) as MaxFinalReportDate
    from @VLReport1 
    group by ARTNumber
) tm on t.ARTNumber = tm.ARTNumber and t.FinalReportDate = tm.MaxFinalReportDate

if @Copiesml ='<=1000'
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,		
		(COUNT(CASE WHEN Sex ='F' THEN 1 END)) As Female , 		
		(COUNT(CASE WHEN Sex = 'M'  THEN 1 END)) As Male , 
		(COUNT(CASE WHEN Sex = 'NA' THEN 1 END)) As NoData , 		
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult = 'Detected' and  Copies_ml <= 1000)
		or (FinalReportResult = 'Below Minimum Detectable Level') or (FinalReportResult = 'Not Detected')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName	
	end 
else if @Copiesml ='>1000'
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN Sex ='F' THEN 1 END)) As Female , 		
		(COUNT(CASE WHEN Sex = 'M'  THEN 1 END)) As Male , 
		(COUNT(CASE WHEN Sex = 'NA' THEN 1 END)) As NoData , 	
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult = 'Detected' and  Copies_ml > 1000)
		or (FinalReportResult = 'Above Upper Limit of Quantification')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
	end 
else if @Copiesml ='ValidOutcom'
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN Sex ='F' THEN 1 END)) As Female , 		
		(COUNT(CASE WHEN Sex = 'M'  THEN 1 END)) As Male , 
		(COUNT(CASE WHEN Sex = 'NA' THEN 1 END)) As NoData , 	
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult= 'Not Detected' or FinalReportResult= 'Detected' or FinalReportResult = 'Above Upper Limit of Quantification' 
		or FinalReportResult ='Below Minimum Detectable Level')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
	end 
else 
	begin
		SELECT  COUNT(ARTNumber) As No_Patient,
		(COUNT(CASE WHEN Sex ='F' THEN 1 END)) As Female , 		
		(COUNT(CASE WHEN Sex = 'M'  THEN 1 END)) As Male , 
		(COUNT(CASE WHEN Sex = 'NA' THEN 1 END)) As NoData , 	
		FacilityTypeName,ProvinceName, FacilityName ,LaboratoryName
		From @VLLastDateReport1
		Where (FinalReportResult= 'Not Detected' or FinalReportResult= 'Detected' or FinalReportResult = 'Above Upper Limit of Quantification' 
		or FinalReportResult = 'Invalid' or FinalReportResult = 'Error' or FinalReportResult = 'No Result' or FinalReportResult ='Below Minimum Detectable Level')
		Group by FacilityTypeName,ProvinceName,FacilityName,LaboratoryName
	end 
end
GO
/****** Object:  StoredProcedure [dbo].[VLRegister]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLRegister]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)='',
	@CollectionFrom nvarchar(100)='' ,
	@CollectionTo nvarchar(100)='',
	@TestFrom nvarchar(100)='' ,
	@TestTo nvarchar(100)='',
	@ProvinceId nvarchar(500)='',
	@FacilityType1 nvarchar(100)='' ,
	@FacilityType2 nvarchar(100)='' ,
	@FacilityType3 nvarchar(100)='' 
AS
SELECT  
dbo.VLPatient.Fullname, dbo.VLPatient.Sex, dbo.VLPatient.PatientCode, dbo.VLPatient.ARTNumber, dbo.VLRequestForm.CurrentRegimen, dbo.Province.ProvinceName, dbo.Facility.FacilityName, 
dbo.Facility.VLSMSNumber, dbo.Facility.VLEmail, dbo.FacilityType.FacilityTypeName, dbo.LLG.LLGName AS Township, dbo.VLRequestForm.Age,dbo.VLRequestForm.Age_Month, dbo.VLTestReason.Reasonfortest, 
dbo.SpecimenType.SpecimenName, dbo.VLRequestForm.RegistrationNo, dbo.VLRequestForm.BatchNumber, dbo.VLRequestForm.ReasonTest, dbo.VLRequestForm.PreviousLabNumber, 
dbo.VLRequestForm.SpecimenType, dbo.VLRequestForm.Adherence, dbo.VLRequestForm.PrevVLcopiesml, dbo.VLRequestForm.Mostrecentviralload, dbo.VLRequestForm.MostrecentviralloadLog, 
dbo.VLRequestForm.BaselineCD4count, dbo.VLRequestForm.MostrecentCD4count, dbo.VLRequestForm.DateCD4Test, dbo.VLRequestForm.Daterecentviralload, 
dbo.VLRequestForm.Patientontherapy, dbo.VLRequestForm.Patientevertherapy, dbo.VLRequestForm.PrevVLLog, dbo.VLRequestForm.ARTStaringDate, dbo.VLRequestForm.SampleStored, 
dbo.VLRequestForm.NameOfNurseOrHEOCollectingDBS, dbo.VLSpecimen.LabNumber, dbo.VLSpecimen.specimencollectionTime, dbo.VLSpecimen.SampleCollectedDate, 
dbo.VLSpecimen.SampleShipmentDate, dbo.VLSpecimen.RegistrationDate, dbo.AppUser.FirstName + ' ' + dbo.AppUser.LastName AS UserEnteringData, dbo.VLSpecimen.SpecimenQuality, 
dbo.VLSpecimen.RejectedReason, dbo.VLSpecimen.Id AS VLSpecimenId, dbo.VLSpecimenResult.LabInstrumentId, dbo.VLSpecimenResult.TestedBy, dbo.VLSpecimenResult.Copies_ml, 
dbo.VLSpecimenResult.LogCopies, dbo.VLSpecimenResult.DateCreated AS DateCreatedSpecimenResult, dbo.VLSpecimenResult.DateUpdated AS DateUpdatedSpecimenResult, 
dbo.VLSpecimenResult.UpdatedById AS UpdatedByIdSpecimenResult, dbo.VLSpecimenResult.CreatedById AS CreatedByIdSpecimenResult, 
SpecimenResultUpdatedBy.FirstName + ' ' + SpecimenResultUpdatedBy.LastName AS ResultApprovedBy, dbo.VLSpecimenResult.Id AS SpecimenResultId, 
dbo.VLSpecimenResult.FinalReportResult, dbo.VLSpecimenResult.FinalReportDate, dbo.VLSpecimenResult.Comment, dbo.VLStatus.Status, dbo.LabInstrument.LabInstrumentname,
VLSpecimen.RecievedDate
FROM         
dbo.VLSpecimen LEFT OUTER JOIN
dbo.VLRequestForm ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN
dbo.FacilityType ON dbo.VLRequestForm.WardId = dbo.FacilityType.Id LEFT OUTER JOIN
dbo.VLPatient ON dbo.VLRequestForm.PatientId = dbo.VLPatient.Id LEFT OUTER JOIN
dbo.Facility ON dbo.VLRequestForm.FacilityId = dbo.Facility.Id LEFT OUTER JOIN
dbo.LLG ON dbo.LLG.Id = dbo.Facility.LLGId LEFT OUTER JOIN
dbo.VLTestReason ON dbo.VLTestReason.Id = dbo.VLRequestForm.ReasonTest LEFT OUTER JOIN
dbo.SpecimenType ON dbo.SpecimenType.Id = dbo.VLRequestForm.SpecimenType LEFT OUTER JOIN
dbo.AppUser ON dbo.VLSpecimen.UserEnteringData = dbo.AppUser.UserId LEFT OUTER JOIN
dbo.Province ON dbo.Province.Id = dbo.VLRequestForm.ProvinceId LEFT OUTER JOIN
dbo.VLStatus ON dbo.VLStatus.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
dbo.VLSpecimenResult ON dbo.VLSpecimenResult.VLSpecimenId = dbo.VLSpecimen.Id LEFT OUTER JOIN
dbo.LabInstrument ON dbo.VLSpecimenResult.LabInstrumentId = dbo.LabInstrument.ID LEFT OUTER JOIN
dbo.AppUser AS SpecimenResultUpdatedBy ON dbo.VLSpecimenResult.UpdatedById = SpecimenResultUpdatedBy.UserId
 Where    
1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When dbo.VLSpecimen.RecievedDate between @DateFrom and @DateTo Then 1 END
and 1 = Case when @CollectionFrom = '' and  @CollectionTo ='' Then 1 When dbo.VLSpecimen.SampleCollectedDate between @CollectionFrom and @CollectionTo Then 1 END
and 1 = Case when @TestFrom = '' and  @TestTo ='' Then 1 When dbo.VLSpecimenResult.FinalReportDate  between @TestFrom and @TestTo Then 1 END
and 1 = Case when @ProvinceId ='' Then 1 When charindex(',' + CAST(Province.Id as nvarchar(20)) + ',', @ProvinceId) > 0 Then 1 END 
and 1 = Case when @FacilityType1 ='' Then 1 When charindex(',' + CAST(Facility.FacilityTypeId as nvarchar(20)) + ',', @FacilityType1) > 0  Then 1 END 
and 1 = Case when @FacilityType3 ='' Then 1 When Facility.FacilityType3 IN (SELECT * FROM dbo.CSVToTable(@FacilityType3))  Then 1 END
Order by VLSpecimen.RecievedDate asc,dbo.VLSpecimen.LabNumber asc
GO
/****** Object:  StoredProcedure [dbo].[VLSummaryReport]    Script Date: 11/25/2020 6:10:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VLSummaryReport]
	@DateFrom nvarchar(100)='' ,
	@DateTo nvarchar(100)=''
AS
SELECT                          
                          nullif(COUNT(CASE WHEN VLRequestForm.Patientontherapy = 1 and dbo.VLSpecimenResult.Copies_ml <= 1000 THEN 1 END) * 100,0) / COUNT(CASE WHEN VLRequestForm.Patientontherapy = 1 THEN 1 END ) AS 'Percentage_of_people_on_ART_tested_for_viral_load ',
                          nullif(COUNT(CASE WHEN VLRequestForm.Patientontherapy = 1 and dbo.VLSpecimenResult.Copies_ml <= 1000 and Datediff(month,VLRequestForm.ARTStaringDate,getdate()) > 12 THEN 1 END) * 100,0) / COUNT(CASE WHEN Datediff(month,VLRequestForm.ARTStaringDate,getdate()) > 12 THEN 1 END ) AS 'Percentage_of_people_on_ART_tested_for_viral_load_after_12_months_of_therapy',
                          nullif(COUNT(CASE WHEN VLRequestForm.Patientontherapy = 1 and dbo.VLSpecimenResult.Copies_ml <= 50 THEN 1 END) * 100,0) / COUNT(CASE WHEN VLRequestForm.Patientontherapy = 1 THEN 1 END ) AS 'Percentage_of_people_on_ART_tested_for_viral_load_with_undetectable_Viral_Load ',
                          nullif(COUNT(CASE WHEN VLRequestForm.BaselineCD4count < 200 THEN 1 END) * 100,0) / COUNT(CASE WHEN VLRequestForm.BaselineCD4count Is not null THEN 1 END ) AS 'Percentage_of_HIV_positive_persons_with_first_CD4 ',
                          nullif(Sum(VLRequestForm.BaselineCD4count),0) / COUNT(CASE WHEN VLRequestForm.BaselineCD4count Is not null Then 1 END) as 'Avg_CD4_at_ART_Initiation'
                          FROM dbo.VLRequestForm LEFT OUTER JOIN 
                          dbo.VLSpecimen ON dbo.VLRequestForm.Id = dbo.VLSpecimen.VLRequestId LEFT OUTER JOIN 
                          dbo.VLSpecimenResult ON dbo.VLSpecimen.Id = dbo.VLSpecimenResult.VLSpecimenId LEFT OUTER JOIN 
                          dbo.VLStatus On dbo.VLSpecimen.Id = dbo.VLStatus.VLSpecimenId
                          
                      Where    1 = Case when @DateFrom = '' and  @DateTo ='' Then 1 When VLSpecimenResult.FinalReportDate between @DateFrom and @DateTo Then 1 END AND
                               dbo.VLStatus.Status !='FilledResult' or dbo.VLStatus.Status !='RecivedFromFacility'
GO
